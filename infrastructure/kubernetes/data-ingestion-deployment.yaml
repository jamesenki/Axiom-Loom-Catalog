apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion
  namespace: ai-predictive-maintenance
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: ingestion
    app.kubernetes.io/part-of: ai-predictive-maintenance-engine
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: data-ingestion
      app.kubernetes.io/component: ingestion
  template:
    metadata:
      labels:
        app.kubernetes.io/name: data-ingestion
        app.kubernetes.io/component: ingestion
        app.kubernetes.io/part-of: ai-predictive-maintenance-engine
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
      - name: data-ingestion
        image: ai-pm-engine/data-ingestion:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3005
          protocol: TCP
        - name: metrics
          containerPort: 9095
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: KAFKA_BROKERS
          value: "kafka-0.kafka-headless:9092,kafka-1.kafka-headless:9092,kafka-2.kafka-headless:9092"
        - name: KAFKA_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_GROUP_ID
          value: "data-ingestion-group"
        - name: INFLUXDB_HOST
          value: "influxdb-service.ai-predictive-maintenance.svc.cluster.local"
        - name: INFLUXDB_PORT
          value: "8086"
        - name: INFLUXDB_TOKEN
          valueFrom:
            secretKeyRef:
              name: influxdb-credentials
              key: token
        - name: INFLUXDB_ORG
          value: "ai_pm_engine"
        - name: INFLUXDB_BUCKET
          value: "vehicle_diagnostics"
        - name: SOVD_INTEGRATION_URL
          value: "http://sovd-integration-service:3002"
        - name: BATCH_SIZE
          value: "1000"
        - name: FLUSH_INTERVAL
          value: "5000"
        - name: MAX_RETRIES
          value: "3"
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: data-ingestion-config
---
apiVersion: v1
kind: Service
metadata:
  name: data-ingestion-service
  namespace: ai-predictive-maintenance
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: ingestion
    app.kubernetes.io/part-of: ai-predictive-maintenance-engine
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3005
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9095
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: ingestion
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-ingestion-config
  namespace: ai-predictive-maintenance
data:
  ingestion-config.yaml: |
    kafka:
      consumer:
        topics:
          - vehicle-sensor-data
          - diagnostic-data
          - sovd-events
        sessionTimeout: 30000
        heartbeatInterval: 3000
        maxBatchSize: 500
        maxWaitTime: 1000
      
      producer:
        topics:
          processed-data: vehicle-data-processed
          anomalies: data-anomalies
          errors: ingestion-errors
        compressionType: snappy
        batchSize: 16384
        linger: 100
    
    processing:
      validation:
        enabled: true
        rules:
          - field: timestamp
            type: datetime
            required: true
          - field: vehicle_id
            type: string
            pattern: "^veh_[a-zA-Z0-9]+$"
            required: true
          - field: sensor_data
            type: object
            required: true
      
      enrichment:
        enabled: true
        sources:
          - type: vehicle_metadata
            cache_ttl: 3600
          - type: sensor_calibration
            cache_ttl: 86400
      
      transformation:
        enabled: true
        pipeline:
          - name: unit_conversion
            config:
              temperature: celsius
              pressure: bar
              distance: kilometers
          - name: data_aggregation
            config:
              window: 60s
              method: average
          - name: anomaly_detection
            config:
              method: isolation_forest
              contamination: 0.01
    
    storage:
      influxdb:
        write_options:
          batchSize: 5000
          flushInterval: 1000
          retryInterval: 5000
          maxRetries: 5
        retention_policy:
          name: vehicle_data_rp
          duration: 90d
          replication: 1
      
      backup:
        enabled: true
        type: s3
        bucket: ai-pm-data-backup
        prefix: raw-data/
        retention: 365d
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: data-ingestion-hpa
  namespace: ai-predictive-maintenance
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: data-ingestion
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: External
    external:
      metric:
        name: kafka_consumer_lag
        selector:
          matchLabels:
            topic: vehicle-sensor-data
      target:
        type: Value
        value: "1000"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30