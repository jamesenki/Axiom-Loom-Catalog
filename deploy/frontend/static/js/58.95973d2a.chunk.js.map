{"version":3,"file":"static/js/58.95973d2a.chunk.js","mappings":"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","sources":["components/UnifiedApiExplorer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link, useSearchParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  ArrowLeft,\n  FileCode,\n  Globe,\n  Database,\n  Search,\n  Filter,\n  ChevronRight,\n  AlertCircle,\n  Play,\n  Save,\n  History,\n  Code2,\n  Key,\n  Settings,\n  Copy,\n  CheckCircle,\n  Download,\n  ExternalLink\n} from 'lucide-react';\nimport { theme } from '../styles/design-system';\nimport {\n  Container,\n  Section,\n  H1,\n  H2,\n  H3,\n  Text,\n  Lead,\n  Button,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  Flex,\n  Grid,\n  Badge,\n  FullPageLoading,\n  Input\n} from './styled';\nimport SwaggerUI from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\ninterface APISpec {\n  name: string;\n  path: string;\n  type: 'OpenAPI' | 'GraphQL' | 'gRPC' | 'Postman';\n  version?: string;\n  description?: string;\n  endpoints?: number;\n  content?: any;\n}\n\ninterface RequestHistory {\n  id: string;\n  timestamp: number;\n  method: string;\n  url: string;\n  headers: Record<string, string>;\n  body?: any;\n  response?: any;\n  apiType: string;\n  duration?: number;\n}\n\ninterface Environment {\n  name: string;\n  variables: Record<string, string>;\n}\n\nconst PageLayout = styled.div`\n  display: flex;\n  height: calc(100vh - 60px);\n  background: ${props => props.theme.colors.background.primary};\n`;\n\nconst Sidebar = styled.div`\n  width: 320px;\n  background: ${props => props.theme.colors.background.secondary};\n  border-right: 1px solid ${props => props.theme.colors.border.light};\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ExplorerHeader = styled.div`\n  background: ${props => props.theme.colors.background.secondary};\n  padding: ${props => props.theme.spacing[6]};\n  border-bottom: 1px solid ${props => props.theme.colors.border.light};\n`;\n\nconst ExplorerContent = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: ${props => props.theme.spacing[6]};\n`;\n\nconst TabBar = styled.div`\n  display: flex;\n  gap: ${props => props.theme.spacing[2]};\n  padding: ${props => props.theme.spacing[4]} ${props => props.theme.spacing[6]};\n  background: ${props => props.theme.colors.background.primary};\n  border-bottom: 1px solid ${props => props.theme.colors.border.light};\n`;\n\nconst Tab = styled.button<{ active?: boolean }>`\n  padding: ${props => props.theme.spacing[2]} ${props => props.theme.spacing[4]};\n  background: ${props => props.active ? theme.colors.primary.yellow : 'transparent'};\n  color: ${props => props.active ? theme.colors.primary.black : theme.colors.text.secondary};\n  border: 1px solid ${props => props.active ? theme.colors.primary.yellow : 'transparent'};\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-weight: ${props => props.theme.typography.fontWeight.medium};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.active ? theme.colors.primary.yellow : 'rgba(255, 230, 0, 0.1)'};\n    border-color: ${props => props.theme.colors.primary.yellow};\n  }\n`;\n\nconst SearchBar = styled.div`\n  position: relative;\n  padding: ${props => props.theme.spacing[4]};\n`;\n\nconst SearchInput = styled(Input)`\n  padding-left: ${props => props.theme.spacing[10]};\n  background: ${props => props.theme.colors.background.primary};\n  border: 2px solid transparent;\n  \n  &:focus {\n    border-color: ${props => props.theme.colors.primary.yellow};\n  }\n`;\n\nconst SearchIcon = styled(Search)`\n  position: absolute;\n  left: ${props => props.theme.spacing[7]};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${props => props.theme.colors.text.secondary};\n`;\n\nconst APIList = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: ${props => props.theme.spacing[4]};\n`;\n\nconst APIItem = styled.div<{ active?: boolean; dataType?: string }>`\n  padding: ${props => props.theme.spacing[4]};\n  margin-bottom: ${props => props.theme.spacing[2]};\n  background: ${props => props.active ? theme.colors.primary.yellow : theme.colors.background.primary};\n  color: ${props => props.active ? theme.colors.primary.black : theme.colors.text.primary};\n  border: 1px solid ${props => props.active ? theme.colors.primary.yellow : theme.colors.border.light};\n  border-left: 4px solid ${props => {\n    switch (props.dataType) {\n      case 'OpenAPI': return '#FF6B6B';\n      case 'GraphQL': return '#E90C59';\n      case 'gRPC': return '#00A67E';\n      case 'Postman': return '#FF6500';\n      default: return theme.colors.primary.yellow;\n    }\n  }};\n  border-radius: ${props => props.theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.active ? theme.colors.primary.yellow : 'rgba(255, 230, 0, 0.1)'};\n    transform: translateX(2px);\n  }\n`;\n\nconst RequestBuilder = styled(Card)`\n  margin-bottom: ${props => props.theme.spacing[6]};\n`;\n\nconst MethodSelect = styled.select`\n  padding: ${props => props.theme.spacing[2]} ${props => props.theme.spacing[3]};\n  background: ${props => props.theme.colors.primary.yellow};\n  color: ${props => props.theme.colors.primary.black};\n  border: none;\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-weight: ${props => props.theme.typography.fontWeight.semibold};\n  cursor: pointer;\n`;\n\nconst UrlInput = styled(Input)`\n  flex: 1;\n  font-family: ${props => props.theme.typography.fontFamily.mono};\n`;\n\nconst HeadersEditor = styled.div`\n  margin-top: ${props => props.theme.spacing[4]};\n`;\n\nconst HeaderRow = styled.div`\n  display: flex;\n  gap: ${props => props.theme.spacing[2]};\n  margin-bottom: ${props => props.theme.spacing[2]};\n`;\n\nconst BodyEditor = styled.textarea`\n  width: 100%;\n  min-height: 200px;\n  padding: ${props => props.theme.spacing[3]};\n  background: ${props => props.theme.colors.background.secondary};\n  color: ${props => props.theme.colors.text.primary};\n  border: 1px solid ${props => props.theme.colors.border.light};\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-family: ${props => props.theme.typography.fontFamily.mono};\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary.yellow};\n  }\n`;\n\nconst ResponseViewer = styled.div`\n  background: ${props => props.theme.colors.background.secondary};\n  border: 1px solid ${props => props.theme.colors.border.light};\n  border-radius: ${props => props.theme.borderRadius.md};\n  overflow: hidden;\n`;\n\nconst ResponseHeader = styled.div`\n  padding: ${props => props.theme.spacing[3]} ${props => props.theme.spacing[4]};\n  background: ${props => props.theme.colors.background.primary};\n  border-bottom: 1px solid ${props => props.theme.colors.border.light};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ResponseBody = styled.pre`\n  padding: ${props => props.theme.spacing[4]};\n  margin: 0;\n  overflow: auto;\n  font-family: ${props => props.theme.typography.fontFamily.mono};\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  line-height: 1.5;\n  color: ${props => props.theme.colors.text.primary};\n  white-space: pre-wrap;\n  word-wrap: break-word;\n`;\n\nconst StatusBadge = styled(Badge)<{ status?: number }>`\n  background: ${props => {\n    if (!props.status) return theme.colors.secondary.mediumGray;\n    if (props.status >= 200 && props.status < 300) return '#10B981';\n    if (props.status >= 400) return '#EF4444';\n    return '#F59E0B';\n  }};\n  color: white;\n`;\n\nconst HistoryPanel = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  right: 0;\n  top: 60px;\n  width: 400px;\n  height: calc(100vh - 60px);\n  background: ${props => props.theme.colors.background.secondary};\n  border-left: 1px solid ${props => props.theme.colors.border.light};\n  transform: ${props => props.isOpen ? 'translateX(0)' : 'translateX(100%)'};\n  transition: transform 0.3s ease;\n  z-index: 100;\n  overflow-y: auto;\n`;\n\nconst HistoryItem = styled.div`\n  padding: ${props => props.theme.spacing[3]};\n  border-bottom: 1px solid ${props => props.theme.colors.border.light};\n  cursor: pointer;\n  \n  &:hover {\n    background: ${props => props.theme.colors.background.primary};\n  }\n`;\n\nconst EnvSelector = styled.div`\n  padding: ${props => props.theme.spacing[4]};\n  border-top: 1px solid ${props => props.theme.colors.border.light};\n  margin-top: auto;\n`;\n\nconst UnifiedApiExplorer: React.FC = () => {\n  const { repoName } = useParams<{ repoName: string }>();\n  const [searchParams, setSearchParams] = useSearchParams();\n  \n  const [apis, setApis] = useState<APISpec[]>([]);\n  const [selectedApi, setSelectedApi] = useState<APISpec | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState<'explorer' | 'history' | 'snippets'>('explorer');\n  \n  // Request builder state\n  const [method, setMethod] = useState('GET');\n  const [url, setUrl] = useState('');\n  const [headers, setHeaders] = useState<Record<string, string>>({\n    'Content-Type': 'application/json'\n  });\n  const [body, setBody] = useState('');\n  const [response, setResponse] = useState<any>(null);\n  const [executing, setExecuting] = useState(false);\n  \n  // History and environment state\n  const [history, setHistory] = useState<RequestHistory[]>([]);\n  const [showHistory, setShowHistory] = useState(false);\n  const [environments, setEnvironments] = useState<Environment[]>([\n    { name: 'Development', variables: { BASE_URL: 'http://localhost:3000' } },\n    { name: 'Production', variables: { BASE_URL: 'https://api.example.com' } }\n  ]);\n  const [currentEnv, setCurrentEnv] = useState<Environment>(environments[0]);\n\n  useEffect(() => {\n    fetchAPIs();\n    loadHistory();\n  }, [repoName]);\n\n  useEffect(() => {\n    const apiPath = searchParams.get('api');\n    if (apiPath && apis.length > 0) {\n      const api = apis.find(a => a.path === apiPath);\n      if (api) selectAPI(api);\n    }\n  }, [apis, searchParams]);\n\n  const fetchAPIs = async () => {\n    try {\n      const response = await fetch(`/api/detect-apis/${repoName}`);\n      if (!response.ok) throw new Error('Failed to fetch APIs');\n      \n      const data = await response.json();\n      const allApis: APISpec[] = [];\n      \n      // Add REST APIs\n      if (data.apis?.rest) {\n        data.apis.rest.forEach((api: any) => {\n          allApis.push({\n            name: api.title || api.file.split('/').pop().replace(/\\.(yaml|yml|json)$/i, ''),\n            path: api.file,\n            type: 'OpenAPI',\n            version: api.version,\n            description: api.description\n          });\n        });\n      }\n      \n      // Add GraphQL APIs\n      if (data.apis?.graphql) {\n        data.apis.graphql.forEach((api: any) => {\n          allApis.push({\n            name: api.title || api.file.split('/').pop().replace(/\\.(graphql|gql)$/i, ''),\n            path: api.file,\n            type: 'GraphQL',\n            description: api.description\n          });\n        });\n      }\n      \n      // Add gRPC APIs\n      if (data.apis?.grpc) {\n        data.apis.grpc.forEach((api: any) => {\n          allApis.push({\n            name: api.title || api.file.split('/').pop().replace(/\\.proto$/i, ''),\n            path: api.file,\n            type: 'gRPC',\n            description: api.description\n          });\n        });\n      }\n      \n      // Check for Postman collections\n      const postmanResponse = await fetch(`/api/repository/${repoName}/postman-collections`);\n      if (postmanResponse.ok) {\n        const postmanData = await postmanResponse.json();\n        postmanData.forEach((collection: any) => {\n          allApis.push({\n            name: collection.name,\n            path: collection.path,\n            type: 'Postman',\n            description: 'Postman Collection'\n          });\n        });\n      }\n      \n      setApis(allApis);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const selectAPI = async (api: APISpec) => {\n    setSelectedApi(api);\n    setSearchParams({ api: api.path });\n    \n    // Load API content\n    try {\n      const response = await fetch(`/api/repository/${repoName}/file?path=${encodeURIComponent(api.path)}`);\n      if (!response.ok) throw new Error('Failed to load API content');\n      \n      const content = await response.text();\n      api.content = content;\n      \n      // Parse and set initial request based on API type\n      if (api.type === 'OpenAPI') {\n        try {\n          const spec = JSON.parse(content);\n          const firstPath = Object.keys(spec.paths || {})[0];\n          if (firstPath) {\n            const firstMethod = Object.keys(spec.paths[firstPath])[0];\n            setMethod(firstMethod.toUpperCase());\n            setUrl(`${spec.servers?.[0]?.url || '{{BASE_URL}}'}${firstPath}`);\n          }\n        } catch (e) {\n          // Handle YAML or parsing errors\n        }\n      } else if (api.type === 'GraphQL') {\n        setMethod('POST');\n        setUrl('{{BASE_URL}}/graphql');\n        setBody(`query {\n  # Your GraphQL query here\n}`);\n      }\n    } catch (err) {\n      console.error('Error loading API:', err);\n    }\n  };\n\n  const executeRequest = async () => {\n    setExecuting(true);\n    const startTime = Date.now();\n    \n    try {\n      // Replace environment variables\n      let finalUrl = url;\n      Object.entries(currentEnv.variables).forEach(([key, value]) => {\n        finalUrl = finalUrl.replace(`{{${key}}}`, value);\n      });\n      \n      const requestOptions: RequestInit = {\n        method,\n        headers: headers\n      };\n      \n      if (method !== 'GET' && method !== 'HEAD' && body) {\n        requestOptions.body = body;\n      }\n      \n      // For demo purposes, simulate a response\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const mockResponse = {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n          'content-type': 'application/json',\n          'x-request-id': Math.random().toString(36).substr(2, 9)\n        },\n        data: {\n          message: 'This is a simulated response',\n          timestamp: new Date().toISOString(),\n          endpoint: finalUrl,\n          method: method\n        }\n      };\n      \n      setResponse(mockResponse);\n      \n      // Add to history\n      const historyItem: RequestHistory = {\n        id: Date.now().toString(),\n        timestamp: Date.now(),\n        method,\n        url: finalUrl,\n        headers,\n        body: body || undefined,\n        response: mockResponse,\n        apiType: selectedApi?.type || 'Unknown',\n        duration: Date.now() - startTime\n      };\n      \n      const newHistory = [historyItem, ...history].slice(0, 50);\n      setHistory(newHistory);\n      localStorage.setItem(`api-history-${repoName}`, JSON.stringify(newHistory));\n      \n    } catch (err) {\n      setResponse({\n        status: 0,\n        error: err instanceof Error ? err.message : 'Request failed'\n      });\n    } finally {\n      setExecuting(false);\n    }\n  };\n\n  const loadHistory = () => {\n    const saved = localStorage.getItem(`api-history-${repoName}`);\n    if (saved) {\n      try {\n        setHistory(JSON.parse(saved));\n      } catch (e) {\n        console.error('Failed to load history:', e);\n      }\n    }\n  };\n\n  const loadFromHistory = (item: RequestHistory) => {\n    setMethod(item.method);\n    setUrl(item.url);\n    setHeaders(item.headers);\n    setBody(item.body || '');\n    setShowHistory(false);\n  };\n\n  const generateCodeSnippet = (language: string): string => {\n    let finalUrl = url;\n    Object.entries(currentEnv.variables).forEach(([key, value]) => {\n      finalUrl = finalUrl.replace(`{{${key}}}`, value);\n    });\n    \n    switch (language) {\n      case 'curl':\n        return `curl -X ${method} \"${finalUrl}\" \\\\\n${Object.entries(headers).map(([k, v]) => `  -H \"${k}: ${v}\"`).join(' \\\\\\n')}${\n  body ? ` \\\\\\n  -d '${body}'` : ''\n}`;\n      \n      case 'javascript':\n        return `fetch(\"${finalUrl}\", {\n  method: \"${method}\",\n  headers: ${JSON.stringify(headers, null, 2)},${\n  body ? `\\n  body: ${JSON.stringify(body)}` : ''\n}\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Error:', error));`;\n      \n      case 'python':\n        return `import requests\n\nresponse = requests.${method.toLowerCase()}(\n    \"${finalUrl}\",\n    headers=${JSON.stringify(headers, null, 2).replace(/\"/g, \"'\")},${\n  body ? `\\n    json=${body}` : ''\n}\n)\n\nprint(response.json())`;\n      \n      default:\n        return '';\n    }\n  };\n\n  const filteredApis = apis.filter(api => \n    api.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    api.path.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    (api.description && api.description.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  if (loading) {\n    return <FullPageLoading text=\"Loading API Explorer...\" />;\n  }\n\n  if (error) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Section>\n          <H1 color=\"secondary\">Error Loading APIs</H1>\n          <Text color=\"secondary\">{error}</Text>\n          <Button as={Link} to=\"/\">Return to Home</Button>\n        </Section>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      <PageLayout>\n        <Sidebar>\n          <SearchBar>\n            <SearchIcon size={20} />\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search APIs...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n          </SearchBar>\n          \n          <APIList>\n            {filteredApis.map((api, index) => (\n              <APIItem\n                key={index}\n                active={selectedApi?.path === api.path}\n                dataType={api.type}\n                onClick={() => selectAPI(api)}\n              >\n                <Flex align=\"center\" justify=\"between\" style={{ marginBottom: theme.spacing[2] }}>\n                  <Text weight=\"semibold\">{api.name}</Text>\n                  <Badge>{api.type}</Badge>\n                </Flex>\n                <Text size=\"small\" color=\"secondary\">{api.path}</Text>\n                {api.description && (\n                  <Text size=\"small\" style={{ marginTop: theme.spacing[1] }}>\n                    {api.description}\n                  </Text>\n                )}\n              </APIItem>\n            ))}\n          </APIList>\n          \n          <EnvSelector>\n            <Text weight=\"semibold\" style={{ marginBottom: theme.spacing[2] }}>\n              Environment\n            </Text>\n            <select\n              value={currentEnv.name}\n              onChange={(e) => setCurrentEnv(environments.find(env => env.name === e.target.value) || environments[0])}\n              style={{\n                width: '100%',\n                padding: theme.spacing[2],\n                background: theme.colors.background.primary,\n                color: theme.colors.text.primary,\n                border: `1px solid ${props => props.theme.colors.border.light}`,\n                borderRadius: theme.borderRadius.md\n              }}\n            >\n              {environments.map(env => (\n                <option key={env.name} value={env.name}>{env.name}</option>\n              ))}\n            </select>\n          </EnvSelector>\n        </Sidebar>\n\n        <MainContent>\n          <ExplorerHeader>\n            <Flex align=\"center\" justify=\"between\">\n              <div>\n                <H2 style={{ margin: 0 }}>\n                  {selectedApi ? selectedApi.name : 'Select an API'}\n                </H2>\n                {selectedApi && (\n                  <Text color=\"secondary\" style={{ marginTop: theme.spacing[1] }}>\n                    {selectedApi.type} • {selectedApi.version || 'Latest'}\n                  </Text>\n                )}\n              </div>\n              \n              <Flex gap={2}>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowHistory(!showHistory)}\n                >\n                  <History size={20} />\n                  History\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setActiveTab('snippets')}\n                >\n                  <Code2 size={20} />\n                  Code\n                </Button>\n              </Flex>\n            </Flex>\n          </ExplorerHeader>\n\n          <TabBar>\n            <Tab\n              active={activeTab === 'explorer'}\n              onClick={() => setActiveTab('explorer')}\n            >\n              API Explorer\n            </Tab>\n            <Tab\n              active={activeTab === 'history'}\n              onClick={() => setActiveTab('history')}\n            >\n              Request History\n            </Tab>\n            <Tab\n              active={activeTab === 'snippets'}\n              onClick={() => setActiveTab('snippets')}\n            >\n              Code Snippets\n            </Tab>\n          </TabBar>\n\n          <ExplorerContent>\n            {activeTab === 'explorer' && selectedApi && (\n              <>\n                <RequestBuilder>\n                  <CardHeader>\n                    <CardTitle>Request</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <Flex gap={2} style={{ marginBottom: theme.spacing[4] }}>\n                      <MethodSelect\n                        value={method}\n                        onChange={(e) => setMethod(e.target.value)}\n                      >\n                        <option value=\"GET\">GET</option>\n                        <option value=\"POST\">POST</option>\n                        <option value=\"PUT\">PUT</option>\n                        <option value=\"PATCH\">PATCH</option>\n                        <option value=\"DELETE\">DELETE</option>\n                      </MethodSelect>\n                      <UrlInput\n                        type=\"text\"\n                        value={url}\n                        onChange={(e) => setUrl(e.target.value)}\n                        placeholder=\"Enter request URL...\"\n                      />\n                      <Button\n                        onClick={executeRequest}\n                        disabled={executing || !url}\n                      >\n                        {executing ? 'Sending...' : (\n                          <>\n                            <Play size={20} />\n                            Send\n                          </>\n                        )}\n                      </Button>\n                    </Flex>\n\n                    <HeadersEditor>\n                      <Text weight=\"semibold\" style={{ marginBottom: theme.spacing[2] }}>\n                        Headers\n                      </Text>\n                      {Object.entries(headers).map(([key, value], index) => (\n                        <HeaderRow key={index}>\n                          <Input\n                            type=\"text\"\n                            value={key}\n                            placeholder=\"Header name\"\n                            onChange={(e) => {\n                              const newHeaders = { ...headers };\n                              delete newHeaders[key];\n                              newHeaders[e.target.value] = value;\n                              setHeaders(newHeaders);\n                            }}\n                          />\n                          <Input\n                            type=\"text\"\n                            value={value}\n                            placeholder=\"Header value\"\n                            onChange={(e) => {\n                              setHeaders({ ...headers, [key]: e.target.value });\n                            }}\n                          />\n                        </HeaderRow>\n                      ))}\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => setHeaders({ ...headers, '': '' })}\n                      >\n                        Add Header\n                      </Button>\n                    </HeadersEditor>\n\n                    {method !== 'GET' && method !== 'HEAD' && (\n                      <div style={{ marginTop: theme.spacing[4] }}>\n                        <Text weight=\"semibold\" style={{ marginBottom: theme.spacing[2] }}>\n                          Body\n                        </Text>\n                        <BodyEditor\n                          value={body}\n                          onChange={(e) => setBody(e.target.value)}\n                          placeholder=\"Request body (JSON, XML, etc.)\"\n                        />\n                      </div>\n                    )}\n                  </CardContent>\n                </RequestBuilder>\n\n                {response && (\n                  <ResponseViewer>\n                    <ResponseHeader>\n                      <Flex align=\"center\" gap={3}>\n                        <Text weight=\"semibold\">Response</Text>\n                        <StatusBadge status={response.status}>\n                          {response.status} {response.statusText}\n                        </StatusBadge>\n                        {response.duration && (\n                          <Text size=\"small\" color=\"secondary\">\n                            {response.duration}ms\n                          </Text>\n                        )}\n                      </Flex>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => {\n                          const blob = new Blob([JSON.stringify(response.data, null, 2)], { type: 'application/json' });\n                          const url = URL.createObjectURL(blob);\n                          const a = document.createElement('a');\n                          a.href = url;\n                          a.download = 'response.json';\n                          a.click();\n                        }}\n                      >\n                        <Download size={16} />\n                        Download\n                      </Button>\n                    </ResponseHeader>\n                    <ResponseBody>\n                      {JSON.stringify(response.data || response.error, null, 2)}\n                    </ResponseBody>\n                  </ResponseViewer>\n                )}\n\n                {selectedApi.type === 'OpenAPI' && selectedApi.content && (\n                  <div style={{ marginTop: theme.spacing[6] }}>\n                    <SwaggerUI\n                      spec={selectedApi.content}\n                      docExpansion=\"list\"\n                      defaultModelsExpandDepth={1}\n                      displayRequestDuration={true}\n                      tryItOutEnabled={true}\n                    />\n                  </div>\n                )}\n              </>\n            )}\n\n            {activeTab === 'snippets' && selectedApi && (\n              <div>\n                <H3>Code Snippets</H3>\n                <Text color=\"secondary\" style={{ marginBottom: theme.spacing[4] }}>\n                  Copy code snippets for your favorite language\n                </Text>\n                \n                {['curl', 'javascript', 'python'].map(lang => (\n                  <Card key={lang} style={{ marginBottom: theme.spacing[4] }}>\n                    <CardHeader>\n                      <Flex align=\"center\" justify=\"between\">\n                        <CardTitle>{lang.charAt(0).toUpperCase() + lang.slice(1)}</CardTitle>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            navigator.clipboard.writeText(generateCodeSnippet(lang));\n                          }}\n                        >\n                          <Copy size={16} />\n                          Copy\n                        </Button>\n                      </Flex>\n                    </CardHeader>\n                    <CardContent>\n                      <pre style={{\n                        background: theme.colors.background.secondary,\n                        padding: theme.spacing[3],\n                        borderRadius: theme.borderRadius.md,\n                        overflow: 'auto',\n                        fontSize: theme.typography.fontSize.sm,\n                        fontFamily: theme.typography.fontFamily.mono\n                      }}>\n                        {generateCodeSnippet(lang)}\n                      </pre>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </ExplorerContent>\n        </MainContent>\n      </PageLayout>\n\n      <HistoryPanel isOpen={showHistory}>\n        <div style={{ padding: theme.spacing[4] }}>\n          <Flex align=\"center\" justify=\"between\" style={{ marginBottom: theme.spacing[4] }}>\n            <H3>Request History</H3>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => setShowHistory(false)}\n            >\n              ✕\n            </Button>\n          </Flex>\n          \n          {history.length === 0 ? (\n            <Text color=\"secondary\">No requests yet</Text>\n          ) : (\n            history.map(item => (\n              <HistoryItem key={item.id} onClick={() => loadFromHistory(item)}>\n                <Flex align=\"center\" justify=\"between\" style={{ marginBottom: theme.spacing[1] }}>\n                  <Text weight=\"semibold\">{item.method} {item.apiType}</Text>\n                  <StatusBadge status={item.response?.status}>\n                    {item.response?.status || 'Error'}\n                  </StatusBadge>\n                </Flex>\n                <Text size=\"small\" color=\"secondary\">\n                  {new URL(item.url).pathname}\n                </Text>\n                <Text size=\"small\" color=\"secondary\">\n                  {new Date(item.timestamp).toLocaleString()}\n                </Text>\n              </HistoryItem>\n            ))\n          )}\n        </div>\n      </HistoryPanel>\n    </>\n  );\n};\n\nexport default UnifiedApiExplorer;"],"names":["PageLayout","styled","div","props","theme","colors","background","primary","Sidebar","secondary","border","light","MainContent","ExplorerHeader","spacing","ExplorerContent","TabBar","Tab","button","active","yellow","black","text","borderRadius","md","typography","fontWeight","medium","SearchBar","SearchInput","Input","SearchIcon","Search","APIList","APIItem","dataType","RequestBuilder","Card","MethodSelect","select","semibold","UrlInput","fontFamily","mono","HeadersEditor","HeaderRow","BodyEditor","textarea","fontSize","sm","ResponseViewer","ResponseHeader","ResponseBody","pre","StatusBadge","Badge","status","mediumGray","HistoryPanel","isOpen","HistoryItem","EnvSelector","UnifiedApiExplorer","repoName","useParams","searchParams","setSearchParams","useSearchParams","apis","setApis","useState","selectedApi","setSelectedApi","loading","setLoading","error","setError","searchQuery","setSearchQuery","activeTab","setActiveTab","method","setMethod","url","setUrl","headers","setHeaders","body","setBody","response","setResponse","executing","setExecuting","history","setHistory","showHistory","setShowHistory","environments","setEnvironments","name","variables","BASE_URL","currentEnv","setCurrentEnv","useEffect","fetchAPIs","loadHistory","apiPath","get","length","api","find","a","path","selectAPI","async","_data$apis","_data$apis2","_data$apis3","fetch","ok","Error","data","json","allApis","rest","forEach","push","title","file","split","pop","replace","type","version","description","graphql","grpc","postmanResponse","collection","err","message","encodeURIComponent","content","spec","JSON","parse","firstPath","Object","keys","paths","_spec$servers","_spec$servers$","firstMethod","toUpperCase","servers","e","saved","localStorage","getItem","generateCodeSnippet","language","finalUrl","entries","_ref2","key","value","map","_ref3","k","v","join","stringify","toLowerCase","filteredApis","filter","includes","_jsx","FullPageLoading","Container","maxWidth","children","_jsxs","Section","H1","color","Text","Button","as","Link","to","_Fragment","size","placeholder","onChange","target","index","onClick","Flex","align","justify","style","marginBottom","weight","marginTop","env","width","padding","H2","margin","gap","variant","History","Code2","CardHeader","CardTitle","CardContent","startTime","Date","now","_ref","Promise","resolve","setTimeout","mockResponse","statusText","Math","random","toString","substr","timestamp","toISOString","endpoint","newHistory","id","undefined","apiType","duration","slice","setItem","disabled","Play","_ref4","newHeaders","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","Download","SwaggerUI","docExpansion","defaultModelsExpandDepth","displayRequestDuration","tryItOutEnabled","H3","lang","charAt","navigator","clipboard","writeText","Copy","overflow","item","_item$response","_item$response2","loadFromHistory","pathname","toLocaleString"],"sourceRoot":""}