{"version":3,"file":"static/js/282.d69edf94.chunk.js","mappings":"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","sources":["components/auth/UserProfile.tsx"],"sourcesContent":["/**\n * User Profile Component\n * Displays and manages user profile information\n */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useAuth } from '../../contexts/BypassAuthContext';\nimport { UserRole } from '../../services/auth/clientAuthService';\n\nconst ProfileContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 32px;\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 24px;\n  margin-bottom: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e1e4e8;\n`;\n\nconst Avatar = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 32px;\n  color: white;\n  font-weight: 600;\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n  \n  h2 {\n    margin: 0 0 8px 0;\n    font-size: 24px;\n    color: #2e3440;\n  }\n  \n  p {\n    margin: 0;\n    color: #6c757d;\n    font-size: 16px;\n  }\n`;\n\nconst RoleBadge = styled.span<{ role: UserRole }>`\n  display: inline-block;\n  padding: 4px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  font-weight: 600;\n  margin-left: 12px;\n  \n  ${props => {\n    switch (props.role) {\n      case UserRole.ADMIN:\n        return `\n          background: #fee;\n          color: #c00;\n          border: 1px solid #fcc;\n        `;\n      case UserRole.DEVELOPER:\n        return `\n          background: #e7f3ff;\n          color: #004085;\n          border: 1px solid #b8daff;\n        `;\n      default:\n        return `\n          background: #f0f0f0;\n          color: #666;\n          border: 1px solid #ddd;\n        `;\n    }\n  }}\n`;\n\nconst Section = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 18px;\n  color: #2e3440;\n  margin: 0 0 16px 0;\n`;\n\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 16px;\n`;\n\nconst InfoItem = styled.div`\n  background: #f8f9fa;\n  padding: 16px;\n  border-radius: 8px;\n  \n  label {\n    display: block;\n    font-size: 13px;\n    color: #6c757d;\n    margin-bottom: 4px;\n    font-weight: 600;\n  }\n  \n  span {\n    display: block;\n    font-size: 15px;\n    color: #2e3440;\n  }\n`;\n\nconst PermissionsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 8px;\n`;\n\nconst PermissionItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px;\n  background: #f0f7ff;\n  border-radius: 6px;\n  font-size: 14px;\n  color: #004085;\n  \n  &::before {\n    content: 'âœ“';\n    color: #28a745;\n    font-weight: bold;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 6px;\n  font-size: 15px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  background: #dc3545;\n  color: white;\n  \n  &:hover {\n    background: #c82333;\n  }\n`;\n\nconst UserProfile: React.FC = () => {\n  const { user, logout, hasPermission } = useAuth();\n\n  if (!user) {\n    return <ProfileContainer>Loading...</ProfileContainer>;\n  }\n\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(word => word[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  const permissions = {\n    [UserRole.ADMIN]: [\n      'Full system access',\n      'User management',\n      'API key management',\n      'Repository management',\n      'Security settings',\n      'Analytics access',\n      'Audit logs'\n    ],\n    [UserRole.DEVELOPER]: [\n      'Read APIs & documentation',\n      'Create API keys',\n      'Manage own API keys',\n      'Test APIs',\n      'Download collections',\n      'Access development tools'\n    ],\n    [UserRole.VIEWER]: [\n      'Read APIs',\n      'Read documentation',\n      'View public content'\n    ]\n  };\n\n  const userPermissions = permissions[user.role] || permissions[UserRole.VIEWER];\n\n  return (\n    <ProfileContainer>\n      <ProfileHeader>\n        <Avatar>{getInitials(user.name)}</Avatar>\n        <UserInfo>\n          <h2>\n            {user.name}\n            <RoleBadge role={user.role}>\n              {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n            </RoleBadge>\n          </h2>\n          <p>{user.email}</p>\n        </UserInfo>\n        <Button onClick={logout}>Sign Out</Button>\n      </ProfileHeader>\n\n      <Section>\n        <SectionTitle>Account Information</SectionTitle>\n        <InfoGrid>\n          <InfoItem>\n            <label>User ID</label>\n            <span>{user.id}</span>\n          </InfoItem>\n          <InfoItem>\n            <label>Organization</label>\n            <span>{user.organizationId || 'EY'}</span>\n          </InfoItem>\n          <InfoItem>\n            <label>Account Created</label>\n            <span>{new Date(user.createdAt).toLocaleDateString()}</span>\n          </InfoItem>\n          <InfoItem>\n            <label>Last Login</label>\n            <span>{user.lastLogin ? new Date(user.lastLogin).toLocaleString() : 'N/A'}</span>\n          </InfoItem>\n        </InfoGrid>\n      </Section>\n\n      <Section>\n        <SectionTitle>Permissions</SectionTitle>\n        <PermissionsList>\n          {userPermissions.map((permission, index) => (\n            <PermissionItem key={index}>{permission}</PermissionItem>\n          ))}\n        </PermissionsList>\n      </Section>\n\n      <Section>\n        <SectionTitle>API Rate Limits</SectionTitle>\n        <InfoGrid>\n          <InfoItem>\n            <label>Rate Limit</label>\n            <span>\n              {user.role === UserRole.ADMIN ? '1000' : \n               user.role === UserRole.DEVELOPER ? '500' : '100'} requests per 15 minutes\n            </span>\n          </InfoItem>\n          <InfoItem>\n            <label>API Key Limit</label>\n            <span>\n              {user.role === UserRole.ADMIN ? 'Unlimited' : \n               user.role === UserRole.DEVELOPER ? '10 keys' : 'N/A'}\n            </span>\n          </InfoItem>\n        </InfoGrid>\n      </Section>\n    </ProfileContainer>\n  );\n};\n\nexport default UserProfile;"],"names":["ProfileContainer","styled","div","ProfileHeader","Avatar","UserInfo","RoleBadge","span","props","role","UserRole","ADMIN","DEVELOPER","Section","SectionTitle","h3","InfoGrid","InfoItem","PermissionsList","ul","PermissionItem","li","Button","button","UserProfile","user","logout","hasPermission","useAuth","_jsx","children","permissions","VIEWER","userPermissions","_jsxs","name","split","map","word","join","toUpperCase","slice","charAt","email","onClick","id","organizationId","Date","createdAt","toLocaleDateString","lastLogin","toLocaleString","permission","index"],"sourceRoot":""}