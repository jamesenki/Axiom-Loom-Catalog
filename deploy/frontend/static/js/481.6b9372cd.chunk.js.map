{"version":3,"file":"static/js/481.6b9372cd.chunk.js","mappings":"gUAuCA,MAAMA,EAAaC,EAAAA,GAAOC,GAAG;;;gBAGbC,GAASA,EAAMC,MAAMC,OAAOC,WAAWC;EAGjDC,EAAUP,EAAAA,GAAOC,GAAG;;gBAEVC,GAASA,EAAMC,MAAMC,OAAOC,WAAWG;4BAC3BN,GAASA,EAAMC,MAAMC,OAAOK,OAAOC;aAClDR,GAASA,EAAMC,MAAMQ,QAAQ;;EAIpCC,EAAcZ,EAAAA,GAAOC,GAAG;;aAEjBC,GAASA,EAAMC,MAAMQ,QAAQ;;EAIpCE,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAO;mBACdZ,GAASA,EAAMC,MAAMQ,QAAQ;;sBAE1BT,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;WAC/Cb,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;;;kBAG7Bb,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;aACzCb,GAASA,EAAMC,MAAMC,OAAOE,QAAQU;;EAI3CC,EAAejB,EAAAA,GAAOkB,EAAE;eACfhB,GAASA,EAAMC,MAAMgB,WAAWC,SAASC;iBACvCnB,GAASA,EAAMC,MAAMgB,WAAWG,WAAWC;gBAC5CrB,GAASA,EAAMC,MAAMQ,QAAQ;WAClCT,GAASA,EAAMC,MAAMC,OAAOoB,KAAKlB;EAGtCmB,EAAiBzB,EAAAA,GAAOC,GAAyB;aAC1CC,GAASA,EAAMC,MAAMQ,QAAQ;mBACvBT,GAASA,EAAMC,MAAMQ,QAAQ;mBAC7BT,GAASA,EAAMC,MAAMuB,aAAaC;;;gBAGrCzB,GAASA,EAAM0B,OAASzB,EAAAA,EAAMC,OAAOE,QAAQS,OAASZ,EAAAA,EAAMC,OAAOC,WAAWC;WACnFJ,GAASA,EAAM0B,OAASzB,EAAAA,EAAMC,OAAOE,QAAQU,MAAQb,EAAAA,EAAMC,OAAOoB,KAAKlB;sBAC5DJ,GAASA,EAAM0B,OAASzB,EAAAA,EAAMC,OAAOE,QAAQS,OAASZ,EAAAA,EAAMC,OAAOK,OAAOC;;;kBAG9ER,GAASA,EAAM0B,OAASzB,EAAAA,EAAMC,OAAOE,QAAQS,OAAS;oBACpDb,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;;;EAKlDc,EAAiB7B,EAAAA,GAAOC,GAAG;;;SAGxBC,GAASA,EAAMC,MAAMQ,QAAQ;mBACnBT,GAASA,EAAMC,MAAMQ,QAAQ;EAG1CmB,EAAiB9B,EAAAA,GAAO+B,EAAE;eACjB7B,GAASA,EAAMC,MAAMgB,WAAWC,SAASY;iBACvC9B,GAASA,EAAMC,MAAMgB,WAAWG,WAAWW;;;;;;EAQtDC,EAAiBlC,EAAAA,GAAOmC,CAAC;eAChBjC,GAASA,EAAMC,MAAMgB,WAAWC,SAASgB;WAC7ClC,GAASA,EAAMC,MAAMC,OAAOoB,KAAKhB;;;;;;EAQtC6B,EAAgBrC,EAAAA,GAAOC,GAAG;gBAChBC,GAASA,EAAMC,MAAMC,OAAOC,WAAWG;aAC1CN,GAASA,EAAMC,MAAMQ,QAAQ;mBACvBT,GAASA,EAAMC,MAAMuB,aAAaY;mBAClCpC,GAASA,EAAMC,MAAMQ,QAAQ;2BACrBT,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;EAGzDwB,EAAkBvC,EAAAA,GAAOwC,EAAE;eAClBtC,GAASA,EAAMC,MAAMgB,WAAWC,SAAS;iBACvClB,GAASA,EAAMC,MAAMgB,WAAWG,WAAWC;WACjDrB,GAASA,EAAMC,MAAMC,OAAOoB,KAAKlB;gBAC5BJ,GAASA,EAAMC,MAAMQ,QAAQ;;;EAKvC8B,EAAwBzC,EAAAA,GAAOmC,CAAC;eACvBjC,GAASA,EAAMC,MAAMgB,WAAWC,SAASkB;WAC7CpC,GAASA,EAAMC,MAAMC,OAAOoB,KAAKhB;;;EAKtCkC,EAAgB1C,EAAAA,GAAOC,GAAG;gBAChBC,GAASA,EAAMC,MAAMC,OAAOC,WAAWC;sBACjCJ,GAASA,EAAMC,MAAMC,OAAOK,OAAOkC;mBACtCzC,GAASA,EAAMC,MAAMuB,aAAaY;aACxCpC,GAASA,EAAMC,MAAMQ,QAAQ;mBACvBT,GAASA,EAAMC,MAAMQ,QAAQ;EAG1CiC,EAAc5C,EAAAA,GAAOkB,EAAE;eACdhB,GAASA,EAAMC,MAAMgB,WAAWC,SAASC;iBACvCnB,GAASA,EAAMC,MAAMgB,WAAWG,WAAWW;gBAC5C/B,GAASA,EAAMC,MAAMQ,QAAQ;;;SAGpCT,GAASA,EAAMC,MAAMQ,QAAQ;EAGhCkC,EAAe7C,EAAAA,GAAOC,GAAG;;gBAEfC,GAASA,EAAMC,MAAMC,OAAOC,WAAWG;sBACjCN,GAASA,EAAMC,MAAMC,OAAOK,OAAOC;mBACtCR,GAASA,EAAMC,MAAMuB,aAAaC;aACxCzB,GAASA,EAAMC,MAAMQ,QAAQ;iBACzBT,GAASA,EAAMC,MAAMgB,WAAW2B,WAAWC;eAC7C7C,GAASA,EAAMC,MAAMgB,WAAWC,SAASgB;;YAE5ClC,GAASA,EAAMC,MAAMQ,QAAQ;EAGnCqC,GAAahD,EAAAA,EAAAA,IAAOc,EAAAA,GAAO;;WAEtBZ,GAASA,EAAMC,MAAMQ,QAAQ;;;gBAGxBT,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;WACzCb,GAASA,EAAMC,MAAMC,OAAOE,QAAQU;aAClCd,GAASA,EAAMC,MAAMQ,QAAQ,MAAMT,GAASA,EAAMC,MAAMQ,QAAQ;eAC9DT,GAASA,EAAMC,MAAMgB,WAAWC,SAASgB;;;kBAGtClC,GAASA,EAAMC,MAAMC,OAAOE,QAAQU;aACzCd,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;;EAI3CkC,EAAgBjD,EAAAA,GAAOC,GAAG;;SAEvBC,GAASA,EAAMC,MAAMQ,QAAQ;gBACtBT,GAASA,EAAMC,MAAMQ,QAAQ;EAGvCuC,EAAmBlD,EAAAA,GAAOC,GAAG;gBACnBC,GAASA,EAAMC,MAAMC,OAAOC,WAAWC;sBACjCJ,GAASA,EAAMC,MAAMC,OAAOK,OAAOkC;mBACtCzC,GAASA,EAAMC,MAAMuB,aAAaY;aACxCpC,GAASA,EAAMC,MAAMQ,QAAQ;EAGpCwC,EAAiBnD,EAAAA,GAAOkB,EAAE;eACjBhB,GAASA,EAAMC,MAAMgB,WAAWC,SAAS;iBACvClB,GAASA,EAAMC,MAAMgB,WAAWG,WAAWC;gBAC5CrB,GAASA,EAAMC,MAAMQ,QAAQ;;;SAGpCT,GAASA,EAAMC,MAAMQ,QAAQ;EAGhCyC,EAAepD,EAAAA,GAAOC,GAAG;;;;aAIlBC,GAASA,EAAMC,MAAMQ,QAAQ;gBAC1BT,GAASA,EAAMC,MAAMC,OAAOC,WAAWG;2BAC5BN,GAASA,EAAMC,MAAMC,OAAOE,QAAQS;mBAC5Cb,GAASA,EAAMC,MAAMuB,aAAaC;mBAClCzB,GAASA,EAAMC,MAAMQ,QAAQ;;;;kBAI9BT,GAASA,EAAMC,MAAMkD,QAAQ1B;;;EAKzC2B,EAAetD,EAAAA,GAAO+B,EAAE;eACf7B,GAASA,EAAMC,MAAMgB,WAAWC,SAASkB;iBACvCpC,GAASA,EAAMC,MAAMgB,WAAWG,WAAWqB;;WAEjDzC,GAASA,EAAMC,MAAMC,OAAOoB,KAAKlB;EAGtCiD,GAAgBvD,EAAAA,EAAAA,IAAOc,EAAAA,GAAO;;sBAEdZ,GAASA,EAAMC,MAAMC,OAAOE,QAAQU;WAC/Cd,GAASA,EAAMC,MAAMC,OAAOE,QAAQU;aAClCd,GAASA,EAAMC,MAAMQ,QAAQ,MAAMT,GAASA,EAAMC,MAAMQ,QAAQ;eAC9DT,GAASA,EAAMC,MAAMgB,WAAWC,SAASgB;;;SAG/ClC,GAASA,EAAMC,MAAMQ,QAAQ;;;kBAGpBT,GAASA,EAAMC,MAAMC,OAAOE,QAAQU;aACzCd,GAASA,EAAMC,MAAMC,OAAOE,QAAQkD;;ECvPjD,ED2P+CC,KAAO,IAADC,EAAAC,EACnD,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACdC,EAAaC,IAAkBC,EAAAA,EAAAA,UAA8B,KAC7DC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAmC,OAChFG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAwB,OAC3CO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAwB,OAE1DS,EAAAA,EAAAA,WAAU,KACRC,KACC,CAACd,IAEJ,MAAMc,EAAmBC,UACvB,IACE,MAAMC,QAAiBC,MAAM,mBAAmBjB,yBAChD,IAAKgB,EAASE,GACZ,MAAM,IAAIC,MAAM,+BAElB,MAAMC,QAAaJ,EAASK,OAC5BlB,EAAeiB,GAGXA,EAAKE,OAAS,GAChBC,EAAeH,EAAK,GAExB,CAAE,MAAOI,GACPd,EAASc,aAAeL,MAAQK,EAAIC,QAAU,gBAChD,CAAC,QACCjB,GAAW,EACb,GAGIe,EAAiBR,UACrB,IACE,MAAMC,QAAiBC,MAAM,mBAAmBjB,eAAsB0B,mBAAmBC,EAAWC,SACpG,IAAKZ,EAASE,GAAI,MAAM,IAAIC,MAAM,6BAElC,MAAMU,QAAgBb,EAASK,OAC/Bf,EAAsB,IACjBqB,KACAE,GAEP,CAAE,MAAOL,GAEPlB,EAAsBqB,EACxB,GAkCF,GAAIpB,EACF,OAAOuB,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CAACnE,KAAK,mCAG/B,GAAI6C,GAAgC,IAAvBP,EAAYoB,OACvB,OACEQ,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CAACC,SAAS,KAAIC,UACtBC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAF,SAAA,EACNJ,EAAAA,EAAAA,KAACO,EAAAA,GAAE,CAACC,MAAM,YAAWJ,SAAC,+CACtBJ,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACD,MAAM,YAAWJ,SACpBzB,GAAS,4DAEZqB,EAAAA,EAAAA,KAAC5E,EAAAA,GAAM,CAACsF,GAAIC,EAAAA,GAAMC,GAAG,IAAGR,SAAC,wBAQjC,MAAMS,EAAoBtC,GAAsBH,EAAY,GACtD0C,GApDuBjB,EAoDSgB,EAnD7B,GAAGE,OAAOC,SAASC,yBAAyB/C,eAAsB0B,mBAAmBC,EAAWC,SAD5ED,MAqD7B,MAAMqB,EA3CgBrB,KACpB,MAAMqB,EAAsB,GAEtBC,EAAoBC,IACnB,OAALA,QAAK,IAALA,GAAAA,EAAOC,QAAQC,IACTA,EAAKC,SACPL,EAAUM,KAAKF,EAAKG,MAElBH,EAAKA,MAAQI,MAAMC,QAAQL,EAAKA,OAClCH,EAAiBG,EAAKA,SAS5B,OAJIzB,EAAWyB,MACbH,EAAiBtB,EAAWyB,MAGvBJ,GAyBSU,CAAaf,GAE/B,OACER,EAAAA,EAAAA,MAAChG,EAAU,CAAA+F,SAAA,EACTC,EAAAA,EAAAA,MAACxF,EAAO,CAAAuF,SAAA,EACNC,EAAAA,EAAAA,MAAClF,EAAU,CAACuF,GAAIC,EAAAA,GAAMC,GAAI,eAAe1C,IAAWkC,SAAA,EAClDJ,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CAACC,KAAM,KAAM,yBAIzBzB,EAAAA,EAAAA,MAAC9E,EAAY,CAAA6E,SAAA,CAAC,gBAAchC,EAAYoB,OAAO,OAE9CpB,EAAY2D,IAAI,CAAClC,EAAYmC,KAC5B3B,EAAAA,EAAAA,MAACtE,EAAc,CAEbG,OAAQ2E,EAAkBf,OAASD,EAAWC,KAC9CmC,QAASA,IAAMxC,EAAeI,GAAYO,SAAA,EAE1CC,EAAAA,EAAAA,MAAClE,EAAc,CAAAiE,SAAA,EACbJ,EAAAA,EAAAA,KAACkC,EAAAA,EAAQ,CAACJ,KAAM,MAChB9B,EAAAA,EAAAA,KAAC5D,EAAc,CAAAgE,SAAEP,EAAW4B,WAE9BzB,EAAAA,EAAAA,KAACxD,EAAc,CAAA4D,SAAEP,EAAWC,SARvBkC,QAaX3B,EAAAA,EAAAA,MAACnF,EAAW,CAAAkF,SAAA,EACVC,EAAAA,EAAAA,MAAC1D,EAAa,CAAAyD,SAAA,EACZJ,EAAAA,EAAAA,KAACnD,EAAe,CAAAuD,UACS,QAAtBpC,EAAA6C,EAAkBsB,YAAI,IAAAnE,OAAA,EAAtBA,EAAwByD,OAAQZ,EAAkBY,QAErDzB,EAAAA,EAAAA,KAACjD,EAAqB,CAAAqD,UACG,QAAtBnC,EAAA4C,EAAkBsB,YAAI,IAAAlE,OAAA,EAAtBA,EAAwBmE,cACxB,wCAAwClE,+NAI7CmC,EAAAA,EAAAA,MAACrD,EAAa,CAAAoD,SAAA,EACZC,EAAAA,EAAAA,MAACnD,EAAW,CAAAkD,SAAA,EACVJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAI,CAACP,KAAM,KAAM,wBAGpB9B,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACD,MAAM,YAAY8B,MAAO,CAAEC,aAAc9H,EAAAA,EAAMQ,QAAQ,IAAKmF,SAAC,6CAInEC,EAAAA,EAAAA,MAAClD,EAAY,CAAAiD,SAAA,CACVU,GACDd,EAAAA,EAAAA,KAAC1C,EAAU,CACT2E,QAASA,KAAMO,OAnGF1G,EAmGkBgF,EAlGzC2B,UAAUC,UAAUC,UAAU7G,GAC9BgD,EAAahD,QACb8G,WAAW,IAAM9D,EAAa,MAAO,KAHdhD,OAoGbgG,KAAK,KAAI1B,SAERvB,IAAciC,GACbT,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,EACEJ,EAAAA,EAAAA,KAAC8C,EAAAA,EAAW,CAAChB,KAAM,KAAM,aAI3BzB,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,EACEJ,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAACjB,KAAM,KAAM,gBAO1BzB,EAAAA,EAAAA,MAAC9C,EAAa,CAAA6C,SAAA,EACZC,EAAAA,EAAAA,MAACjF,EAAAA,GAAM,CACL6G,QAASA,KAEPlB,OAAOiC,KAAKlC,EAAW,UACvBmC,MAAM,wIACN7C,SAAA,EAEFJ,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CAACpB,KAAM,KAAM,qBAGxBzB,EAAAA,EAAAA,MAACjF,EAAAA,GAAM,CACL+H,QAAQ,UACRzC,GAAG,IACH0C,KAAM,GAAGtC,kBACTuC,UAAQ,EAAAjD,SAAA,EAERJ,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CAACpB,KAAM,KAAM,gCAM5BzB,EAAAA,EAAAA,MAAC7C,EAAgB,CAAA4C,SAAA,EACfC,EAAAA,EAAAA,MAAC5C,EAAc,CAAA2C,SAAA,EACbJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAI,CAACxB,KAAM,KAAM,cACNZ,EAAU1B,OAAO,OAG9B0B,EAAU1B,OAAS,EAClB0B,EAAUa,IAAI,CAACwB,EAAUvB,KACvB3B,EAAAA,EAAAA,MAAC3C,EAAY,CAAA0C,SAAA,EACXJ,EAAAA,EAAAA,KAACpC,EAAY,CAAAwC,SAAEmD,KACflD,EAAAA,EAAAA,MAACxC,EAAa,CACZoE,QAASA,IAAMlB,OAAOiC,KACpB,6CAA6ClC,IAC7C,UACAV,SAAA,EAEFJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAI,CAACxB,KAAM,KAAM,eARHE,KAcrBhC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACD,MAAM,YAAWJ,SAAC,yG","sources":["components/PostmanCollectionViewSidebar.tsx","components/PostmanView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  ArrowLeft,\n  Copy,\n  ExternalLink,\n  Code,\n  CheckCircle,\n  FileText,\n  Download,\n  Play\n} from 'lucide-react';\nimport { theme } from '../styles/design-system';\nimport {\n  Container,\n  Section,\n  H1,\n  H2,\n  Text,\n  Button,\n  FullPageLoading\n} from './styled';\n\ninterface PostmanCollection {\n  name: string;\n  path: string;\n  info?: {\n    name: string;\n    description: string;\n    schema: string;\n  };\n  item?: Array<{\n    name: string;\n    request?: any;\n    item?: any[];\n  }>;\n}\n\nconst PageLayout = styled.div`\n  display: flex;\n  height: 100vh;\n  background: ${props => props.theme.colors.background.primary};\n`;\n\nconst Sidebar = styled.div`\n  width: 320px;\n  background: ${props => props.theme.colors.background.secondary};\n  border-right: 1px solid ${props => props.theme.colors.border.light};\n  padding: ${props => props.theme.spacing[6]};\n  overflow-y: auto;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  padding: ${props => props.theme.spacing[8]};\n  overflow-y: auto;\n`;\n\nconst BackButton = styled(Button)`\n  margin-bottom: ${props => props.theme.spacing[6]};\n  background: transparent;\n  border: 1px solid ${props => props.theme.colors.primary.yellow};\n  color: ${props => props.theme.colors.primary.yellow};\n  \n  &:hover {\n    background: ${props => props.theme.colors.primary.yellow};\n    color: ${props => props.theme.colors.primary.black};\n  }\n`;\n\nconst SidebarTitle = styled.h2`\n  font-size: ${props => props.theme.typography.fontSize.xl};\n  font-weight: ${props => props.theme.typography.fontWeight.bold};\n  margin: 0 0 ${props => props.theme.spacing[4]} 0;\n  color: ${props => props.theme.colors.text.primary};\n`;\n\nconst CollectionItem = styled.div<{ active?: boolean }>`\n  padding: ${props => props.theme.spacing[4]};\n  margin-bottom: ${props => props.theme.spacing[2]};\n  border-radius: ${props => props.theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: ${props => props.active ? theme.colors.primary.yellow : theme.colors.background.primary};\n  color: ${props => props.active ? theme.colors.primary.black : theme.colors.text.primary};\n  border: 1px solid ${props => props.active ? theme.colors.primary.yellow : theme.colors.border.light};\n  \n  &:hover {\n    background: ${props => props.active ? theme.colors.primary.yellow : 'rgba(255, 230, 0, 0.1)'};\n    border-color: ${props => props.theme.colors.primary.yellow};\n    transform: translateX(2px);\n  }\n`;\n\nconst CollectionIcon = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing[2]};\n  margin-bottom: ${props => props.theme.spacing[2]};\n`;\n\nconst CollectionName = styled.h3`\n  font-size: ${props => props.theme.typography.fontSize.base};\n  font-weight: ${props => props.theme.typography.fontWeight.semibold};\n  margin: 0;\n  line-height: 1.3;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst CollectionPath = styled.p`\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  color: ${props => props.theme.colors.text.secondary};\n  margin: 0;\n  opacity: 0.8;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst ContentHeader = styled.div`\n  background: ${props => props.theme.colors.background.secondary};\n  padding: ${props => props.theme.spacing[8]};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  margin-bottom: ${props => props.theme.spacing[8]};\n  border-left: 4px solid ${props => props.theme.colors.primary.yellow};\n`;\n\nconst CollectionTitle = styled.h1`\n  font-size: ${props => props.theme.typography.fontSize['3xl']};\n  font-weight: ${props => props.theme.typography.fontWeight.bold};\n  color: ${props => props.theme.colors.text.primary};\n  margin: 0 0 ${props => props.theme.spacing[3]} 0;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n`;\n\nconst CollectionDescription = styled.p`\n  font-size: ${props => props.theme.typography.fontSize.lg};\n  color: ${props => props.theme.colors.text.secondary};\n  margin: 0;\n  line-height: 1.6;\n`;\n\nconst ImportSection = styled.div`\n  background: ${props => props.theme.colors.background.primary};\n  border: 1px solid ${props => props.theme.colors.border.medium};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  padding: ${props => props.theme.spacing[6]};\n  margin-bottom: ${props => props.theme.spacing[8]};\n`;\n\nconst ImportTitle = styled.h2`\n  font-size: ${props => props.theme.typography.fontSize.xl};\n  font-weight: ${props => props.theme.typography.fontWeight.semibold};\n  margin: 0 0 ${props => props.theme.spacing[3]} 0;\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing[2]};\n`;\n\nconst UrlContainer = styled.div`\n  position: relative;\n  background: ${props => props.theme.colors.background.secondary};\n  border: 1px solid ${props => props.theme.colors.border.light};\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: ${props => props.theme.spacing[4]};\n  font-family: ${props => props.theme.typography.fontFamily.mono};\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  word-break: break-all;\n  margin: ${props => props.theme.spacing[3]} 0;\n`;\n\nconst CopyButton = styled(Button)`\n  position: absolute;\n  right: ${props => props.theme.spacing[2]};\n  top: 50%;\n  transform: translateY(-50%);\n  background: ${props => props.theme.colors.primary.yellow};\n  color: ${props => props.theme.colors.primary.black};\n  padding: ${props => props.theme.spacing[2]} ${props => props.theme.spacing[3]};\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  \n  &:hover {\n    background: ${props => props.theme.colors.primary.black};\n    color: ${props => props.theme.colors.primary.yellow};\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${props => props.theme.spacing[3]};\n  margin-top: ${props => props.theme.spacing[4]};\n`;\n\nconst EndpointsSection = styled.div`\n  background: ${props => props.theme.colors.background.primary};\n  border: 1px solid ${props => props.theme.colors.border.medium};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  padding: ${props => props.theme.spacing[6]};\n`;\n\nconst EndpointsTitle = styled.h2`\n  font-size: ${props => props.theme.typography.fontSize['2xl']};\n  font-weight: ${props => props.theme.typography.fontWeight.bold};\n  margin: 0 0 ${props => props.theme.spacing[6]} 0;\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing[2]};\n`;\n\nconst EndpointItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => props.theme.spacing[4]};\n  background: ${props => props.theme.colors.background.secondary};\n  border-left: 4px solid ${props => props.theme.colors.primary.yellow};\n  border-radius: ${props => props.theme.borderRadius.md};\n  margin-bottom: ${props => props.theme.spacing[3]};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    box-shadow: ${props => props.theme.shadows.md};\n    transform: translateX(2px);\n  }\n`;\n\nconst EndpointName = styled.h3`\n  font-size: ${props => props.theme.typography.fontSize.lg};\n  font-weight: ${props => props.theme.typography.fontWeight.medium};\n  margin: 0;\n  color: ${props => props.theme.colors.text.primary};\n`;\n\nconst ExploreButton = styled(Button)`\n  background: transparent;\n  border: 1px solid ${props => props.theme.colors.primary.black};\n  color: ${props => props.theme.colors.primary.black};\n  padding: ${props => props.theme.spacing[2]} ${props => props.theme.spacing[4]};\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing[2]};\n  \n  &:hover {\n    background: ${props => props.theme.colors.primary.black};\n    color: ${props => props.theme.colors.primary.white};\n  }\n`;\n\nconst PostmanCollectionViewSidebar: React.FC = () => {\n  const { repoName } = useParams<{ repoName: string }>();\n  const [collections, setCollections] = useState<PostmanCollection[]>([]);\n  const [selectedCollection, setSelectedCollection] = useState<PostmanCollection | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [copiedUrl, setCopiedUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchCollections();\n  }, [repoName]);\n\n  const fetchCollections = async () => {\n    try {\n      const response = await fetch(`/api/repository/${repoName}/postman-collections`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch collections');\n      }\n      const data = await response.json();\n      setCollections(data);\n      \n      // Load the first collection by default\n      if (data.length > 0) {\n        loadCollection(data[0]);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadCollection = async (collection: PostmanCollection) => {\n    try {\n      const response = await fetch(`/api/repository/${repoName}/file?path=${encodeURIComponent(collection.path)}`);\n      if (!response.ok) throw new Error('Failed to load collection');\n      \n      const content = await response.json();\n      setSelectedCollection({\n        ...collection,\n        ...content\n      });\n    } catch (err) {\n      console.error('Error loading collection:', err);\n      setSelectedCollection(collection);\n    }\n  };\n\n  const getPostmanImportUrl = (collection: PostmanCollection) => {\n    return `${window.location.origin}/api/repository/${repoName}/file?path=${encodeURIComponent(collection.path)}`;\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    setCopiedUrl(text);\n    setTimeout(() => setCopiedUrl(null), 2000);\n  };\n\n  const getEndpoints = (collection: PostmanCollection): string[] => {\n    const endpoints: string[] = [];\n    \n    const extractEndpoints = (items: any[]) => {\n      items?.forEach(item => {\n        if (item.request) {\n          endpoints.push(item.name);\n        }\n        if (item.item && Array.isArray(item.item)) {\n          extractEndpoints(item.item);\n        }\n      });\n    };\n    \n    if (collection.item) {\n      extractEndpoints(collection.item);\n    }\n    \n    return endpoints;\n  };\n\n  if (loading) {\n    return <FullPageLoading text=\"Loading Postman collections...\" />;\n  }\n\n  if (error || collections.length === 0) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Section>\n          <H1 color=\"secondary\">📮 No Postman Collections Found</H1>\n          <Text color=\"secondary\">\n            {error || 'This repository does not have any Postman collections.'}\n          </Text>\n          <Button as={Link} to=\"/\">\n            Return to Home\n          </Button>\n        </Section>\n      </Container>\n    );\n  }\n\n  const currentCollection = selectedCollection || collections[0];\n  const importUrl = getPostmanImportUrl(currentCollection);\n  const endpoints = getEndpoints(currentCollection);\n\n  return (\n    <PageLayout>\n      <Sidebar>\n        <BackButton as={Link} to={`/repository/${repoName}`}>\n          <ArrowLeft size={20} />\n          Back to Repository\n        </BackButton>\n        \n        <SidebarTitle>Collections ({collections.length})</SidebarTitle>\n        \n        {collections.map((collection, index) => (\n          <CollectionItem\n            key={index}\n            active={currentCollection.path === collection.path}\n            onClick={() => loadCollection(collection)}\n          >\n            <CollectionIcon>\n              <FileText size={20} />\n              <CollectionName>{collection.name}</CollectionName>\n            </CollectionIcon>\n            <CollectionPath>{collection.path}</CollectionPath>\n          </CollectionItem>\n        ))}\n      </Sidebar>\n\n      <MainContent>\n        <ContentHeader>\n          <CollectionTitle>\n            {currentCollection.info?.name || currentCollection.name}\n          </CollectionTitle>\n          <CollectionDescription>\n            {currentCollection.info?.description || \n             `Comprehensive Postman collection for ${repoName}. Includes 100% test coverage, mock responses for all scenarios (success, errors, edge cases), and detailed examples. This collection is designed for robust testing, contract validation, and decoupled development.`}\n          </CollectionDescription>\n        </ContentHeader>\n\n        <ImportSection>\n          <ImportTitle>\n            <Play size={24} />\n            Import to Postman\n          </ImportTitle>\n          <Text color=\"secondary\" style={{ marginBottom: theme.spacing[3] }}>\n            Copy this URL and import it in Postman:\n          </Text>\n          \n          <UrlContainer>\n            {importUrl}\n            <CopyButton\n              onClick={() => copyToClipboard(importUrl)}\n              size=\"sm\"\n            >\n              {copiedUrl === importUrl ? (\n                <>\n                  <CheckCircle size={16} />\n                  Copied\n                </>\n              ) : (\n                <>\n                  <Copy size={16} />\n                  Copy\n                </>\n              )}\n            </CopyButton>\n          </UrlContainer>\n\n          <ActionButtons>\n            <Button\n              onClick={() => {\n                // Download collection and provide instructions\n                window.open(importUrl, '_blank');\n                alert('Collection will download. Import it into Postman desktop app:\\n1. Open Postman\\n2. Click Import\\n3. Select the downloaded JSON file');\n              }}\n            >\n              <Download size={20} />\n              Get Collection\n            </Button>\n            <Button\n              variant=\"outline\"\n              as=\"a\"\n              href={`${importUrl}&download=true`}\n              download\n            >\n              <Download size={20} />\n              Download Collection\n            </Button>\n          </ActionButtons>\n        </ImportSection>\n\n        <EndpointsSection>\n          <EndpointsTitle>\n            <Code size={24} />\n            Endpoints ({endpoints.length})\n          </EndpointsTitle>\n          \n          {endpoints.length > 0 ? (\n            endpoints.map((endpoint, index) => (\n              <EndpointItem key={index}>\n                <EndpointName>{endpoint}</EndpointName>\n                <ExploreButton\n                  onClick={() => window.open(\n                    `https://app.getpostman.com/run-collection/${importUrl}`,\n                    '_blank'\n                  )}\n                >\n                  <Code size={16} />\n                  Explore\n                </ExploreButton>\n              </EndpointItem>\n            ))\n          ) : (\n            <Text color=\"secondary\">\n              No endpoints found in this collection. The collection might be using a different structure.\n            </Text>\n          )}\n        </EndpointsSection>\n      </MainContent>\n    </PageLayout>\n  );\n};\n\nexport default PostmanCollectionViewSidebar;","import PostmanCollectionViewSidebar from './PostmanCollectionViewSidebar';\n\nexport default PostmanCollectionViewSidebar;"],"names":["PageLayout","styled","div","props","theme","colors","background","primary","Sidebar","secondary","border","light","spacing","MainContent","BackButton","Button","yellow","black","SidebarTitle","h2","typography","fontSize","xl","fontWeight","bold","text","CollectionItem","borderRadius","md","active","CollectionIcon","CollectionName","h3","base","semibold","CollectionPath","p","sm","ContentHeader","lg","CollectionTitle","h1","CollectionDescription","ImportSection","medium","ImportTitle","UrlContainer","fontFamily","mono","CopyButton","ActionButtons","EndpointsSection","EndpointsTitle","EndpointItem","shadows","EndpointName","ExploreButton","white","PostmanCollectionViewSidebar","_currentCollection$in","_currentCollection$in2","repoName","useParams","collections","setCollections","useState","selectedCollection","setSelectedCollection","loading","setLoading","error","setError","copiedUrl","setCopiedUrl","useEffect","fetchCollections","async","response","fetch","ok","Error","data","json","length","loadCollection","err","message","encodeURIComponent","collection","path","content","_jsx","FullPageLoading","Container","maxWidth","children","_jsxs","Section","H1","color","Text","as","Link","to","currentCollection","importUrl","window","location","origin","endpoints","extractEndpoints","items","forEach","item","request","push","name","Array","isArray","getEndpoints","ArrowLeft","size","map","index","onClick","FileText","info","description","Play","style","marginBottom","copyToClipboard","navigator","clipboard","writeText","setTimeout","_Fragment","CheckCircle","Copy","open","alert","Download","variant","href","download","Code","endpoint"],"sourceRoot":""}