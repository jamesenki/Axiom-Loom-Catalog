{"version":3,"file":"static/js/372.86cda217.chunk.js","mappings":"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","sources":["components/auth/LocalLogin.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AlertCircle, LogIn, User, Lock } from 'lucide-react';\nimport { useAuth } from '../../contexts/BypassAuthContext';\nimport { Container, Button, Input, H1, Text } from '../styled';\n\nconst LoginContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, ${props => props.theme.colors.background.primary} 0%, ${props => props.theme.colors.background.secondary} 100%);\n`;\n\nconst LoginCard = styled.div`\n  background: ${props => props.theme.colors.background.primary};\n  border-radius: ${props => props.theme.borderRadius['2xl']};\n  box-shadow: ${props => props.theme.shadows.xl};\n  padding: ${props => props.theme.spacing[12]};\n  width: 100%;\n  max-width: 400px;\n`;\n\nconst Logo = styled.div`\n  text-align: center;\n  margin-bottom: ${props => props.theme.spacing[8]};\n  \n  h1 {\n    color: ${props => props.theme.colors.primary.black};\n    font-size: ${props => props.theme.typography.fontSize['2xl']};\n    font-weight: 700;\n    margin-bottom: ${props => props.theme.spacing[2]};\n  }\n  \n  p {\n    color: ${props => props.theme.colors.text.secondary};\n    font-size: ${props => props.theme.typography.fontSize.base};\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing[4]};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing[2]};\n`;\n\nconst Label = styled.label`\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  font-weight: 500;\n  color: ${props => props.theme.colors.text.primary};\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  \n  svg {\n    position: absolute;\n    left: ${props => props.theme.spacing[3]};\n    top: 50%;\n    transform: translateY(-50%);\n    color: ${props => props.theme.colors.text.secondary};\n    width: 20px;\n    height: 20px;\n  }\n  \n  input {\n    padding-left: ${props => props.theme.spacing[10]};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${props => props.theme.colors.status.error}10;\n  border: 1px solid ${props => props.theme.colors.status.error}30;\n  color: ${props => props.theme.colors.status.error};\n  padding: ${props => props.theme.spacing[3]};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing[2]};\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  \n  svg {\n    flex-shrink: 0;\n  }\n`;\n\nconst CredentialsHint = styled.div`\n  background-color: ${props => props.theme.colors.info.light};\n  border: 1px solid ${props => props.theme.colors.info.main}30;\n  padding: ${props => props.theme.spacing[4]};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  margin-top: ${props => props.theme.spacing[4]};\n  \n  h3 {\n    font-size: ${props => props.theme.typography.fontSize.sm};\n    font-weight: 600;\n    color: ${props => props.theme.colors.info.main};\n    margin-bottom: ${props => props.theme.spacing[2]};\n  }\n  \n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    \n    li {\n      font-size: ${props => props.theme.typography.fontSize.sm};\n      color: ${props => props.theme.colors.text.secondary};\n      padding: ${props => props.theme.spacing[1]} 0;\n      \n      code {\n        background: ${props => props.theme.colors.background.secondary};\n        padding: ${props => props.theme.spacing[0.5]} ${props => props.theme.spacing[1]};\n        border-radius: ${props => props.theme.borderRadius.sm};\n        font-family: ${props => props.theme.typography.fontFamily.mono};\n      }\n    }\n  }\n`;\n\nexport const LocalLogin: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  const from = (location.state as any)?.from?.pathname || '/';\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    try {\n      await login(email, password);\n      navigate(from, { replace: true });\n    } catch (err: any) {\n      setError(err.message || 'Login failed. Please check your credentials.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuickLogin = (email: string, password: string) => {\n    setEmail(email);\n    setPassword(password);\n  };\n\n  return (\n    <LoginContainer>\n      <Container maxWidth=\"sm\">\n        <LoginCard>\n          <Logo>\n            <h1>Axiom Loom Catalog</h1>\n            <p>Local Authentication</p>\n          </Logo>\n\n          <Form onSubmit={handleSubmit}>\n            {error && (\n              <ErrorMessage>\n                <AlertCircle size={16} />\n                {error}\n              </ErrorMessage>\n            )}\n            \n            <FormGroup>\n              <Label htmlFor=\"email\">Email</Label>\n              <InputWrapper>\n                <User />\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"user@localhost\"\n                  required\n                  disabled={isLoading}\n                />\n              </InputWrapper>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"password\">Password</Label>\n              <InputWrapper>\n                <Lock />\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Enter password\"\n                  required\n                  disabled={isLoading}\n                />\n              </InputWrapper>\n            </FormGroup>\n            \n            <Button\n              type=\"submit\"\n              disabled={isLoading}\n              fullWidth\n            >\n              <LogIn size={20} />\n              {isLoading ? 'Signing in...' : 'Sign In'}\n            </Button>\n          </Form>\n          \n          <CredentialsHint>\n            <h3>Test Credentials:</h3>\n            <ul>\n              <li>\n                Admin: <code onClick={() => handleQuickLogin('admin@localhost', 'admin')}>admin@localhost / admin</code>\n              </li>\n              <li>\n                Developer: <code onClick={() => handleQuickLogin('dev@localhost', 'dev')}>dev@localhost / dev</code>\n              </li>\n              <li>\n                Viewer: <code onClick={() => handleQuickLogin('user@localhost', 'user')}>user@localhost / user</code>\n              </li>\n            </ul>\n          </CredentialsHint>\n        </LoginCard>\n      </Container>\n    </LoginContainer>\n  );\n};\n\nexport default LocalLogin;"],"names":["LoginContainer","styled","div","props","theme","colors","background","primary","secondary","LoginCard","borderRadius","shadows","xl","spacing","Logo","black","typography","fontSize","text","base","Form","form","FormGroup","Label","label","sm","InputWrapper","ErrorMessage","status","error","lg","CredentialsHint","info","light","main","fontFamily","mono","LocalLogin","_location$state","_location$state$from","email","setEmail","useState","password","setPassword","setError","isLoading","setIsLoading","login","useAuth","navigate","useNavigate","from","useLocation","state","pathname","handleQuickLogin","_jsx","children","Container","maxWidth","_jsxs","onSubmit","async","e","preventDefault","replace","err","message","AlertCircle","size","htmlFor","User","Input","id","type","value","onChange","target","placeholder","required","disabled","Lock","Button","fullWidth","LogIn","onClick"],"sourceRoot":""}