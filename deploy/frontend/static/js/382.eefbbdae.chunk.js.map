{"version":3,"file":"static/js/382.eefbbdae.chunk.js","mappings":"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","sources":["services/tokenService.ts","components/AddRepositoryModal.tsx","components/styled/GlassCard.tsx","components/RepositoryList.tsx"],"sourcesContent":["/**\n * Token Service for secure GitHub token management\n * Handles storage, retrieval, and validation of repository access tokens\n */\n\ninterface TokenInfo {\n  token: string;\n  accountName: string;\n  accountUrl: string;\n  createdAt: string;\n  lastUsed?: string;\n  scopes?: string[];\n}\n\ninterface StoredTokens {\n  [key: string]: TokenInfo; // key format: \"owner/repo\" or \"owner/*\" for org-wide tokens\n}\n\nclass TokenService {\n  private static STORAGE_KEY = 'eyns_github_tokens';\n  private static ENCRYPTION_KEY = 'eyns_encryption_key';\n\n  /**\n   * Store a token for a specific repository or organization\n   */\n  static async storeToken(\n    owner: string, \n    repo: string | null, \n    token: string, \n    accountName: string\n  ): Promise<void> {\n    const key = repo ? `${owner}/${repo}` : `${owner}/*`;\n    const accountUrl = `https://github.com/${owner}`;\n    \n    const tokenInfo: TokenInfo = {\n      token: this.encryptToken(token),\n      accountName,\n      accountUrl,\n      createdAt: new Date().toISOString()\n    };\n\n    const tokens = this.getStoredTokens();\n    tokens[key] = tokenInfo;\n    \n    this.saveTokens(tokens);\n  }\n\n  /**\n   * Retrieve a token for a specific repository\n   * Falls back to organization-wide token if available\n   */\n  static getToken(owner: string, repo: string): string | null {\n    const tokens = this.getStoredTokens();\n    \n    // Try repo-specific token first\n    const repoKey = `${owner}/${repo}`;\n    if (tokens[repoKey]) {\n      this.updateLastUsed(repoKey);\n      return this.decryptToken(tokens[repoKey].token);\n    }\n    \n    // Fall back to org-wide token\n    const orgKey = `${owner}/*`;\n    if (tokens[orgKey]) {\n      this.updateLastUsed(orgKey);\n      return this.decryptToken(tokens[orgKey].token);\n    }\n    \n    return null;\n  }\n\n  /**\n   * Get token info without decrypting the token\n   */\n  static getTokenInfo(owner: string, repo: string): Omit<TokenInfo, 'token'> | null {\n    const tokens = this.getStoredTokens();\n    const repoKey = `${owner}/${repo}`;\n    const orgKey = `${owner}/*`;\n    \n    const tokenInfo = tokens[repoKey] || tokens[orgKey];\n    if (tokenInfo) {\n      const { token, ...info } = tokenInfo;\n      return info;\n    }\n    \n    return null;\n  }\n\n  /**\n   * List all stored token accounts\n   */\n  static listAccounts(): Array<{\n    key: string;\n    owner: string;\n    repo: string | null;\n    accountName: string;\n    accountUrl: string;\n    createdAt: string;\n    lastUsed?: string;\n  }> {\n    const tokens = this.getStoredTokens();\n    \n    return Object.entries(tokens).map(([key, info]) => {\n      const [owner, repo] = key.split('/');\n      return {\n        key,\n        owner,\n        repo: repo === '*' ? null : repo,\n        accountName: info.accountName,\n        accountUrl: info.accountUrl,\n        createdAt: info.createdAt,\n        lastUsed: info.lastUsed\n      };\n    });\n  }\n\n  /**\n   * Remove a token\n   */\n  static removeToken(owner: string, repo: string | null): void {\n    const key = repo ? `${owner}/${repo}` : `${owner}/*`;\n    const tokens = this.getStoredTokens();\n    \n    delete tokens[key];\n    this.saveTokens(tokens);\n  }\n\n  /**\n   * Validate a GitHub token by making an API call\n   */\n  static async validateToken(token: string): Promise<{\n    valid: boolean;\n    username?: string;\n    scopes?: string[];\n    error?: string;\n  }> {\n    try {\n      const response = await fetch('https://api.github.com/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/vnd.github.v3+json'\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const scopes = response.headers.get('X-OAuth-Scopes')?.split(', ') || [];\n        \n        return {\n          valid: true,\n          username: data.login,\n          scopes\n        };\n      } else if (response.status === 401) {\n        return {\n          valid: false,\n          error: 'Invalid or expired token'\n        };\n      } else {\n        return {\n          valid: false,\n          error: `GitHub API error: ${response.status}`\n        };\n      }\n    } catch (error) {\n      return {\n        valid: false,\n        error: `Network error: ${error instanceof Error ? error.message : 'Unknown error'}`\n      };\n    }\n  }\n\n  /**\n   * Check if we have any token for a repository\n   */\n  static hasToken(owner: string, repo: string): boolean {\n    const token = this.getToken(owner, repo);\n    return token !== null;\n  }\n\n  // Private helper methods\n\n  private static getStoredTokens(): StoredTokens {\n    try {\n      const stored = localStorage.getItem(this.STORAGE_KEY);\n      if (stored) {\n        return JSON.parse(stored);\n      }\n    } catch (error) {\n      console.error('Failed to retrieve stored tokens:', error);\n    }\n    return {};\n  }\n\n  private static saveTokens(tokens: StoredTokens): void {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(tokens));\n    } catch (error) {\n      console.error('Failed to save tokens:', error);\n      throw new Error('Unable to save authentication tokens');\n    }\n  }\n\n  private static updateLastUsed(key: string): void {\n    const tokens = this.getStoredTokens();\n    if (tokens[key]) {\n      tokens[key].lastUsed = new Date().toISOString();\n      this.saveTokens(tokens);\n    }\n  }\n\n  /**\n   * Simple XOR encryption for basic token obfuscation\n   * In production, use proper encryption or secure storage\n   */\n  private static encryptToken(token: string): string {\n    const key = this.getEncryptionKey();\n    let encrypted = '';\n    \n    for (let i = 0; i < token.length; i++) {\n      encrypted += String.fromCharCode(\n        token.charCodeAt(i) ^ key.charCodeAt(i % key.length)\n      );\n    }\n    \n    return btoa(encrypted);\n  }\n\n  private static decryptToken(encrypted: string): string {\n    const key = this.getEncryptionKey();\n    const decoded = atob(encrypted);\n    let decrypted = '';\n    \n    for (let i = 0; i < decoded.length; i++) {\n      decrypted += String.fromCharCode(\n        decoded.charCodeAt(i) ^ key.charCodeAt(i % key.length)\n      );\n    }\n    \n    return decrypted;\n  }\n\n  private static getEncryptionKey(): string {\n    let key = localStorage.getItem(this.ENCRYPTION_KEY);\n    \n    if (!key) {\n      // Generate a random key if not exists\n      key = Array.from(crypto.getRandomValues(new Uint8Array(32)))\n        .map(b => b.toString(16).padStart(2, '0'))\n        .join('');\n      localStorage.setItem(this.ENCRYPTION_KEY, key);\n    }\n    \n    return key;\n  }\n\n  /**\n   * Clear all stored tokens (for logout/reset)\n   */\n  static clearAll(): void {\n    localStorage.removeItem(this.STORAGE_KEY);\n  }\n}\n\nexport default TokenService;\nexport type { TokenInfo, StoredTokens };","/**\n * Enhanced Add Repository Modal Component\n * \n * Features:\n * - Automatic authorization checking\n * - Secure token management with account-specific naming\n * - Support for organization-wide tokens\n * - Token validation and scope checking\n */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport TokenService from '../services/tokenService';\nimport { getApiUrl } from '../utils/apiConfig';\n\ninterface AddRepositoryModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess?: (repoName: string) => void;\n}\n\ninterface ParsedRepository {\n  owner: string;\n  name: string;\n}\n\ninterface ValidationResult {\n  exists: boolean;\n  needsAuth?: boolean;\n  error?: string;\n  isPrivate?: boolean;\n  visibility?: string;\n  name?: string;\n}\n\nexport const AddRepositoryModal: React.FC<AddRepositoryModalProps> = ({\n  isOpen,\n  onClose,\n  onSuccess\n}) => {\n  const [repoInput, setRepoInput] = useState('');\n  const [githubToken, setGithubToken] = useState('');\n  const [tokenAccountName, setTokenAccountName] = useState('');\n  const [saveTokenForOrg, setSaveTokenForOrg] = useState(false);\n  const [showTokenField, setShowTokenField] = useState(false);\n  const [isValidating, setIsValidating] = useState(false);\n  const [isValidatingToken, setIsValidatingToken] = useState(false);\n  const [isSyncing, setIsSyncing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [validationStatus, setValidationStatus] = useState<'idle' | 'valid' | 'invalid'>('idle');\n  const [tokenValidationStatus, setTokenValidationStatus] = useState<'idle' | 'valid' | 'invalid'>('idle');\n  const [parsedRepo, setParsedRepo] = useState<ParsedRepository | null>(null);\n  const [requiresAuth, setRequiresAuth] = useState(false);\n  const [existingTokenInfo, setExistingTokenInfo] = useState<any>(null);\n  const [tokenUsername, setTokenUsername] = useState<string>('');\n\n  const DEFAULT_GITHUB_ACCOUNT = '2030011612_EYGS';\n\n  const resetForm = () => {\n    setRepoInput('');\n    setGithubToken('');\n    setTokenAccountName('');\n    setSaveTokenForOrg(false);\n    setShowTokenField(false);\n    setError(null);\n    setValidationStatus('idle');\n    setTokenValidationStatus('idle');\n    setParsedRepo(null);\n    setRequiresAuth(false);\n    setExistingTokenInfo(null);\n    setTokenUsername('');\n  };\n\n  const parseGitHubUrl = (input: string): ParsedRepository | null => {\n    const trimmedInput = input.trim();\n    \n    // If it looks like a URL, try to parse it\n    if (trimmedInput.includes('github.com') || trimmedInput.startsWith('http')) {\n      try {\n        // Handle various GitHub URL formats\n        let url = trimmedInput;\n        \n        // Add https:// if missing\n        if (!url.startsWith('http')) {\n          url = 'https://' + url;\n        }\n        \n        // Remove .git suffix if present\n        url = url.replace(/\\.git$/, '');\n        \n        const urlObj = new URL(url);\n        \n        // Check if it's a GitHub URL\n        if (urlObj.hostname !== 'github.com') {\n          return null;\n        }\n        \n        // Extract owner and repo from pathname\n        const pathParts = urlObj.pathname.split('/').filter(part => part.length > 0);\n        \n        if (pathParts.length >= 2) {\n          return {\n            owner: pathParts[0],\n            name: pathParts[1]\n          };\n        }\n      } catch (error) {\n        return null;\n      }\n    } else {\n      // If it doesn't look like a URL, treat it as just a repository name\n      if (trimmedInput && !trimmedInput.includes('/')) {\n        return {\n          owner: DEFAULT_GITHUB_ACCOUNT,\n          name: trimmedInput\n        };\n      }\n      \n      // Handle owner/repo format\n      if (trimmedInput.includes('/')) {\n        const parts = trimmedInput.split('/');\n        if (parts.length === 2 && parts[0] && parts[1]) {\n          return {\n            owner: parts[0],\n            name: parts[1]\n          };\n        }\n      }\n    }\n    \n    return null;\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const validateRepositoryName = (name: string): boolean => {\n    // GitHub repository name validation rules\n    const validNameRegex = /^[a-zA-Z0-9._-]+$/;\n    \n    if (!name) {\n      setError('Repository name is required');\n      return false;\n    }\n    \n    if (name.length > 100) {\n      setError('Repository name must be 100 characters or less');\n      return false;\n    }\n    \n    if (!validNameRegex.test(name)) {\n      setError('Repository name can only contain letters, numbers, dots, hyphens, and underscores');\n      return false;\n    }\n    \n    if (name.startsWith('.') || name.endsWith('.')) {\n      setError('Repository name cannot start or end with a dot');\n      return false;\n    }\n    \n    if (name === '.' || name === '..') {\n      setError('Invalid repository name');\n      return false;\n    }\n    \n    return true;\n  };\n\n  const verifyRepositoryExists = async (\n    owner: string, \n    name: string, \n    token?: string\n  ): Promise<ValidationResult> => {\n    try {\n      // Try POST endpoint with optional token\n      const response = await fetch(getApiUrl(`/api/verify-repository/${owner}/${name}`), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token: token || undefined })\n      });\n      \n      if (response.ok) {\n        return { exists: true };\n      } else if (response.status === 401) {\n        const data = await response.json();\n        return { exists: false, needsAuth: true, error: data.error };\n      } else if (response.status === 404) {\n        const data = await response.json();\n        return { exists: false, error: data.error };\n      } else {\n        return { exists: false, error: 'Unexpected error occurred' };\n      }\n    } catch (error) {\n      console.error('Error verifying repository:', error);\n      return { exists: false, error: 'Network error occurred' };\n    }\n  };\n\n  const validateGitHubToken = async () => {\n    if (!githubToken) {\n      setTokenValidationStatus('invalid');\n      setError('Please enter a GitHub token');\n      return;\n    }\n\n    setIsValidatingToken(true);\n    setError(null);\n\n    try {\n      const result = await TokenService.validateToken(githubToken);\n      \n      if (result.valid) {\n        setTokenValidationStatus('valid');\n        setTokenUsername(result.username || '');\n        \n        // Auto-fill account name if empty\n        if (!tokenAccountName && result.username) {\n          setTokenAccountName(`${result.username}'s GitHub Account`);\n        }\n        \n        // If we have a parsed repo, retry validation with the token\n        if (parsedRepo && requiresAuth) {\n          await handleValidate();\n        }\n      } else {\n        setTokenValidationStatus('invalid');\n        setError(result.error || 'Invalid token');\n      }\n    } catch (error) {\n      setTokenValidationStatus('invalid');\n      setError('Failed to validate token');\n    } finally {\n      setIsValidatingToken(false);\n    }\n  };\n\n  const handleValidate = async () => {\n    setError(null);\n    setValidationStatus('idle');\n    setParsedRepo(null);\n\n    if (!repoInput.trim()) {\n      setError('Repository name or URL is required');\n      setValidationStatus('invalid');\n      return;\n    }\n\n    const parsed = parseGitHubUrl(repoInput);\n    if (!parsed) {\n      setError('Invalid repository name or GitHub URL format');\n      setValidationStatus('invalid');\n      return;\n    }\n\n    if (!validateRepositoryName(parsed.name)) {\n      setValidationStatus('invalid');\n      return;\n    }\n\n    setIsValidating(true);\n    setParsedRepo(parsed);\n\n    try {\n      // Check if we have a stored token for this repository\n      let tokenToUse = githubToken;\n      \n      if (!tokenToUse) {\n        tokenToUse = TokenService.getToken(parsed.owner, parsed.name) || '';\n        if (tokenToUse) {\n          const info = TokenService.getTokenInfo(parsed.owner, parsed.name);\n          setExistingTokenInfo(info);\n        }\n      }\n\n      // First try without token - the server will check if gh CLI has auth\n      const result = await verifyRepositoryExists(parsed.owner, parsed.name, tokenToUse);\n      \n      if (result.exists) {\n        setValidationStatus('valid');\n        setError(null);\n        setRequiresAuth(false);\n        setShowTokenField(false);\n        \n        // Note if it's a private repo that we accessed via gh auth\n        if (result.isPrivate && !tokenToUse) {\n          setError(null); // Clear any error\n        }\n      } else if (result.needsAuth && !tokenToUse) {\n        setValidationStatus('invalid');\n        \n        // More helpful error message\n        if (result.error && result.error.includes('private repository')) {\n          setError(`This appears to be a private repository. The GitHub CLI may not have access to this account. You can either:\n1. Run: gh auth login --hostname github.com\n2. Or provide a personal access token below`);\n        } else {\n          setError(result.error || `This repository requires authentication. Please provide a GitHub personal access token.`);\n        }\n        \n        setRequiresAuth(true);\n        setShowTokenField(true);\n        \n        // Suggest a default account name\n        setTokenAccountName(`${parsed.owner} Account`);\n      } else {\n        setValidationStatus('invalid');\n        \n        // Provide clearer error messages\n        if (result.error) {\n          setError(result.error);\n        } else {\n          setError(`Repository \"${parsed.owner}/${parsed.name}\" not found. Please check the repository name and try again.`);\n        }\n        \n        // Don't automatically show token field if repo doesn't exist\n        if (result.needsAuth || (result.error && result.error.includes('private'))) {\n          setShowTokenField(true);\n          setRequiresAuth(true);\n        }\n      }\n    } catch (error) {\n      setValidationStatus('invalid');\n      setError('Failed to verify repository. Please check your internet connection and try again.');\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  const handleAdd = async () => {\n    if (validationStatus !== 'valid' || !parsedRepo) {\n      await handleValidate();\n      return;\n    }\n\n    setIsSyncing(true);\n    setError(null);\n\n    try {\n      // Save token if provided and not already saved\n      if (githubToken && tokenAccountName && !existingTokenInfo) {\n        const repoToSave = saveTokenForOrg ? null : parsedRepo.name;\n        await TokenService.storeToken(\n          parsedRepo.owner,\n          repoToSave,\n          githubToken,\n          tokenAccountName\n        );\n      }\n\n      // Add repository to local configuration\n      const configResponse = await fetch(getApiUrl('/api/repositories/add'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: parsedRepo.name,\n          account: parsedRepo.owner,\n          token: githubToken || TokenService.getToken(parsedRepo.owner, parsedRepo.name) || undefined\n        })\n      });\n\n      if (!configResponse.ok) {\n        const errorData = await configResponse.json();\n        throw new Error(errorData.error || 'Failed to add repository to configuration');\n      }\n\n      // Sync the newly added repository\n      const syncResponse = await fetch(getApiUrl(`/api/sync-repository/${parsedRepo.name}`), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: githubToken || TokenService.getToken(parsedRepo.owner, parsedRepo.name) || undefined\n        })\n      });\n\n      if (!syncResponse.ok) {\n        throw new Error('Failed to sync repository');\n      }\n\n      // Success!\n      if (onSuccess) {\n        onSuccess(parsedRepo.name);\n      }\n      \n      handleClose();\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to add repository');\n    } finally {\n      setIsSyncing(false);\n    }\n  };\n\n  // Auto-check for existing token when repo is parsed\n  useEffect(() => {\n    if (parsedRepo) {\n      const info = TokenService.getTokenInfo(parsedRepo.owner, parsedRepo.name);\n      if (info) {\n        setExistingTokenInfo(info);\n      } else {\n        setExistingTokenInfo(null);\n      }\n    }\n  }, [parsedRepo]);\n\n  if (!isOpen) return null;\n\n  // Create portal to render modal at document body level\n  return ReactDOM.createPortal(\n    <div \n      style={{ \n        position: 'fixed', \n        top: 0, \n        left: 0, \n        right: 0, \n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 9999,\n        padding: '20px',\n        overflow: 'auto'\n      }}\n      onClick={(e) => {\n        // Close modal if clicking on backdrop\n        if (e.target === e.currentTarget) {\n          handleClose();\n        }\n      }}\n    >\n      <div \n        style={{ \n          backgroundColor: 'white',\n          borderRadius: '12px',\n          boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n          width: '100%',\n          maxWidth: '600px',\n          maxHeight: '90vh',\n          overflow: 'hidden',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative'\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div style={{\n          padding: '24px 32px',\n          borderBottom: '1px solid #e5e7eb',\n          backgroundColor: 'white',\n          position: 'sticky',\n          top: 0,\n          zIndex: 10\n        }}>\n          <h2 style={{\n            fontSize: '24px',\n            fontWeight: '600',\n            color: '#111827',\n            margin: 0\n          }}>Add Repository</h2>\n          <p style={{\n            fontSize: '14px',\n            color: '#6b7280',\n            marginTop: '4px'\n          }}>\n            Add a repository by name or GitHub URL\n          </p>\n        </div>\n\n        <div style={{\n          padding: '24px 32px',\n          overflowY: 'auto',\n          flex: 1\n        }}>\n          <div className=\"space-y-4\">\n            {/* Repository Input */}\n            <div>\n              <label htmlFor=\"repo-input\" style={{\n                display: 'block',\n                fontSize: '14px',\n                fontWeight: '500',\n                color: '#374151',\n                marginBottom: '8px'\n              }}>\n                Repository Name or URL\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"repo-input\"\n                  type=\"text\"\n                  value={repoInput}\n                  onChange={(e) => {\n                    setRepoInput(e.target.value);\n                    setValidationStatus('idle');\n                    setError(null);\n                    setParsedRepo(null);\n                  }}\n                  onBlur={handleValidate}\n                  placeholder=\"e.g., my-project or https://github.com/user/repo\"\n                  style={{\n                    width: '100%',\n                    padding: '10px 12px',\n                    fontSize: '14px',\n                    border: `2px solid ${\n                      validationStatus === 'valid' ? '#10b981' :\n                      validationStatus === 'invalid' ? '#ef4444' :\n                      '#e5e7eb'\n                    }`,\n                    borderRadius: '8px',\n                    outline: 'none',\n                    transition: 'border-color 0.2s',\n                    backgroundColor: isValidating || isSyncing ? '#f9fafb' : 'white',\n                    cursor: isValidating || isSyncing ? 'not-allowed' : 'text'\n                  }}\n                  disabled={isValidating || isSyncing}\n                />\n                {isValidating && (\n                  <div className=\"absolute right-2 top-2\">\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-500\"></div>\n                  </div>\n                )}\n                {validationStatus === 'valid' && (\n                  <div className=\"absolute right-2 top-2\">\n                    <svg className=\"w-5 h-5 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                )}\n              </div>\n              <p style={{\n                fontSize: '12px',\n                color: '#9ca3af',\n                marginTop: '4px'\n              }}>\n                Enter a repository name, owner/repo format, or full GitHub URL\n              </p>\n            </div>\n\n            {/* Existing Token Info */}\n            {existingTokenInfo && (\n              <div style={{\n                padding: '12px 16px',\n                backgroundColor: '#eff6ff',\n                border: '1px solid #bfdbfe',\n                borderRadius: '8px',\n                display: 'flex',\n                alignItems: 'flex-start',\n                gap: '8px'\n              }}>\n                <svg style={{ width: '20px', height: '20px', color: '#2563eb', flexShrink: 0, marginTop: '2px' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                <div>\n                  <p style={{\n                    fontSize: '14px',\n                    color: '#1e40af',\n                    margin: 0\n                  }}>\n                    Using saved token from: <span style={{ fontWeight: '600' }}>{existingTokenInfo.accountName}</span>\n                  </p>\n                  <p style={{\n                    fontSize: '12px',\n                    color: '#1e3a8a',\n                    marginTop: '4px'\n                  }}>\n                    Last used: {existingTokenInfo.lastUsed ? new Date(existingTokenInfo.lastUsed).toLocaleString() : 'Never'}\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {/* Token Input Section */}\n            {(showTokenField || requiresAuth) && !existingTokenInfo && (\n              <div style={{\n                padding: '20px',\n                backgroundColor: '#f9fafb',\n                borderRadius: '8px',\n                border: '1px solid #e5e7eb'\n              }}>\n                <h3 style={{\n                  fontSize: '16px',\n                  fontWeight: '600',\n                  color: '#374151',\n                  marginBottom: '16px'\n                }}>Authentication Required</h3>\n                \n                {/* GitHub Token Input */}\n                <div>\n                  <label htmlFor=\"github-token\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    GitHub Personal Access Token\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      id=\"github-token\"\n                      type=\"password\"\n                      value={githubToken}\n                      onChange={(e) => {\n                        setGithubToken(e.target.value);\n                        setTokenValidationStatus('idle');\n                        if (requiresAuth) {\n                          setValidationStatus('idle');\n                          setError(null);\n                        }\n                      }}\n                      onBlur={() => {\n                        if (githubToken) {\n                          validateGitHubToken();\n                        }\n                      }}\n                      placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxx\"\n                      className={`\n                        w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2\n                        ${tokenValidationStatus === 'valid' ? 'border-green-500 focus:ring-green-500' :\n                          tokenValidationStatus === 'invalid' ? 'border-red-500 focus:ring-red-500' :\n                          'border-gray-300 focus:ring-blue-500'}\n                      `}\n                      disabled={isSyncing || isValidatingToken}\n                    />\n                    {isValidatingToken && (\n                      <div className=\"absolute right-2 top-2\">\n                        <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-500\"></div>\n                      </div>\n                    )}\n                    {tokenValidationStatus === 'valid' && (\n                      <div className=\"absolute right-2 top-2\">\n                        <svg className=\"w-5 h-5 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </div>\n                    )}\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    <a \n                      href=\"https://github.com/settings/tokens/new?scopes=repo\" \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-600 hover:text-blue-800 underline\"\n                    >\n                      Generate a new token\n                    </a>\n                    {' '}with 'repo' scope\n                  </p>\n                </div>\n\n                {/* Account Name Input */}\n                <div>\n                  <label htmlFor=\"token-account-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Account Name (for your reference)\n                  </label>\n                  <input\n                    id=\"token-account-name\"\n                    type=\"text\"\n                    value={tokenAccountName}\n                    onChange={(e) => setTokenAccountName(e.target.value)}\n                    placeholder={`e.g., \"${parsedRepo?.owner || 'Work'} GitHub Account\"`}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    disabled={isSyncing}\n                  />\n                  {tokenUsername && (\n                    <p className=\"text-xs text-green-600 mt-1\">\n                      Token validated for user: @{tokenUsername}\n                    </p>\n                  )}\n                </div>\n\n                {/* Save Token Option */}\n                {parsedRepo && (\n                  <div className=\"flex items-start\">\n                    <input\n                      id=\"save-token-org\"\n                      type=\"checkbox\"\n                      checked={saveTokenForOrg}\n                      onChange={(e) => setSaveTokenForOrg(e.target.checked)}\n                      className=\"mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      disabled={isSyncing}\n                    />\n                    <label htmlFor=\"save-token-org\" className=\"ml-2 text-sm text-gray-700\">\n                      Save token for all repositories in <span className=\"font-medium\">{parsedRepo.owner}</span>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        This will allow you to add other repositories from this organization without re-entering the token\n                      </p>\n                    </label>\n                  </div>\n                )}\n\n                {/* Retry Button */}\n                {requiresAuth && githubToken && tokenValidationStatus === 'valid' && (\n                  <button\n                    type=\"button\"\n                    onClick={handleValidate}\n                    className=\"w-full px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                  >\n                    Verify Repository Access\n                  </button>\n                )}\n              </div>\n            )}\n\n            {/* Add Authentication Button */}\n            {!showTokenField && !requiresAuth && !existingTokenInfo && (\n              <button\n                type=\"button\"\n                onClick={() => setShowTokenField(true)}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  fontSize: '14px',\n                  color: '#2563eb',\n                  border: 'none',\n                  background: 'none',\n                  cursor: 'pointer',\n                  padding: '8px 0',\n                  transition: 'color 0.2s'\n                }}\n                onMouseOver={(e) => {\n                  e.currentTarget.style.color = '#1d4ed8';\n                }}\n                onMouseOut={(e) => {\n                  e.currentTarget.style.color = '#2563eb';\n                }}\n              >\n                <svg style={{ width: '16px', height: '16px', marginRight: '6px' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z\" clipRule=\"evenodd\" />\n                </svg>\n                Add authentication for private repository\n              </button>\n            )}\n\n            {/* Error Message */}\n            {error && (\n              <div style={{\n                padding: '12px 16px',\n                backgroundColor: '#fef2f2',\n                border: '1px solid #fecaca',\n                borderRadius: '8px',\n                display: 'flex',\n                alignItems: 'flex-start',\n                gap: '8px'\n              }}>\n                <svg style={{ width: '20px', height: '20px', color: '#dc2626', flexShrink: 0, marginTop: '2px' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n                <p style={{\n                  fontSize: '14px',\n                  color: '#dc2626',\n                  margin: 0,\n                  lineHeight: '1.5'\n                }}>{error}</p>\n              </div>\n            )}\n\n            {/* Success Message */}\n            {validationStatus === 'valid' && parsedRepo && (\n              <div style={{\n                padding: '12px 16px',\n                backgroundColor: '#f0fdf4',\n                border: '1px solid #bbf7d0',\n                borderRadius: '8px',\n                display: 'flex',\n                alignItems: 'flex-start',\n                gap: '8px'\n              }}>\n                <svg style={{ width: '20px', height: '20px', color: '#10b981', flexShrink: 0, marginTop: '2px' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                <div>\n                  <p style={{\n                    fontSize: '14px',\n                    color: '#059669',\n                    margin: 0\n                  }}>\n                    Repository found: <span style={{ fontWeight: '600' }}>{parsedRepo.owner}/{parsedRepo.name}</span>\n                  </p>\n                  {existingTokenInfo && (\n                    <p style={{\n                      fontSize: '12px',\n                      color: '#047857',\n                      marginTop: '4px'\n                    }}>\n                      Authentication: {existingTokenInfo.accountName}\n                    </p>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Saved Tokens List */}\n            {TokenService.listAccounts().length > 0 && !showTokenField && (\n              <div className=\"mt-4 p-3 bg-gray-50 rounded-md\">\n                <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Saved Accounts</h3>\n                <div className=\"space-y-1\">\n                  {TokenService.listAccounts().map((account) => (\n                    <div key={account.key} className=\"flex items-center justify-between text-xs\">\n                      <span className=\"text-gray-600\">\n                        {account.accountName} ({account.owner}/{account.repo || '*'})\n                      </span>\n                      <button\n                        onClick={() => TokenService.removeToken(account.owner, account.repo)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Footer Actions */}\n        <div style={{\n          padding: '20px 32px',\n          borderTop: '1px solid #e5e7eb',\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: '12px',\n          backgroundColor: 'white',\n          position: 'sticky',\n          bottom: 0\n        }}>\n          <button\n            onClick={handleClose}\n            style={{\n              padding: '10px 20px',\n              fontSize: '14px',\n              fontWeight: '500',\n              color: '#374151',\n              backgroundColor: 'white',\n              border: '1px solid #d1d5db',\n              borderRadius: '8px',\n              cursor: isSyncing ? 'not-allowed' : 'pointer',\n              opacity: isSyncing ? 0.5 : 1,\n              transition: 'all 0.2s'\n            }}\n            onMouseOver={(e) => {\n              if (!isSyncing) {\n                e.currentTarget.style.backgroundColor = '#f9fafb';\n              }\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.backgroundColor = 'white';\n            }}\n            disabled={isSyncing}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleAdd}\n            style={{\n              padding: '10px 20px',\n              fontSize: '14px',\n              fontWeight: '500',\n              color: 'white',\n              backgroundColor: validationStatus === 'valid' && !isSyncing ? '#2563eb' : '#d1d5db',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: validationStatus === 'valid' && !isSyncing ? 'pointer' : 'not-allowed',\n              opacity: validationStatus === 'valid' && !isSyncing ? 1 : 0.7,\n              transition: 'all 0.2s'\n            }}\n            onMouseOver={(e) => {\n              if (validationStatus === 'valid' && !isSyncing) {\n                e.currentTarget.style.backgroundColor = '#1d4ed8';\n              }\n            }}\n            onMouseOut={(e) => {\n              if (validationStatus === 'valid' && !isSyncing) {\n                e.currentTarget.style.backgroundColor = '#2563eb';\n              }\n            }}\n            disabled={validationStatus !== 'valid' || isSyncing}\n          >\n            {isSyncing ? (\n              <span className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                Adding...\n              </span>\n            ) : (\n              'Add Repository'\n            )}\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddRepositoryModal;","/**\n * Glass Morphism Card Components\n * Revolutionary glassmorphism design for the Axiom Loom Catalog\n */\n\nimport React, { ReactNode } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { quantumColors, glassMorphism, quantumAnimations } from '../../styles/axiom-theme';\n\n// Animation keyframes\nconst shimmer = keyframes`\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n`;\n\nconst glassFloat = keyframes`\n  0%, 100% {\n    transform: translateY(0px) rotateX(0deg);\n  }\n  50% {\n    transform: translateY(-4px) rotateX(2deg);\n  }\n`;\n\nconst borderGlow = keyframes`\n  0%, 100% {\n    box-shadow: \n      0 0 20px ${quantumColors.plasma.violet}40,\n      inset 0 0 20px ${quantumColors.glass.background};\n  }\n  33% {\n    box-shadow: \n      0 0 30px ${quantumColors.plasma.cyan}40,\n      inset 0 0 20px ${quantumColors.glass.background};\n  }\n  66% {\n    box-shadow: \n      0 0 25px ${quantumColors.plasma.emerald}40,\n      inset 0 0 20px ${quantumColors.glass.background};\n  }\n`;\n\nconst ripple = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0.6;\n  }\n  100% {\n    transform: scale(4);\n    opacity: 0;\n  }\n`;\n\n// Base glass card styles\nconst baseGlassStyles = css<{\n  variant: 'default' | 'elevated' | 'floating' | 'interactive';\n  glowEffect: boolean;\n  shimmerEffect: boolean;\n}>`\n  /* Minimal blur for maximum readability */\n  background: rgba(10, 10, 20, 0.95); /* Very opaque background */\n  backdrop-filter: blur(0px); /* Minimal blur for clarity */\n  -webkit-backdrop-filter: blur(0px);\n  border: ${glassMorphism.border.subtle};\n  border-radius: 1.5rem;\n  position: relative;\n  overflow: hidden;\n  \n  /* Base shadow */\n  box-shadow: ${glassMorphism.shadow.soft};\n  \n  /* Variant-specific styles */\n  ${props => {\n    switch (props.variant) {\n      case 'elevated':\n        return css`\n          box-shadow: ${glassMorphism.shadow.medium};\n          backdrop-filter: ${glassMorphism.backdrop.heavy};\n          -webkit-backdrop-filter: ${glassMorphism.backdrop.heavy};\n        `;\n      case 'floating':\n        return css`\n          animation: ${css`${glassFloat}`} 6s ease-in-out infinite;\n          box-shadow: ${glassMorphism.shadow.dramatic};\n        `;\n      case 'interactive':\n        return css`\n          cursor: pointer;\n          transition: all ${quantumAnimations.duration.normal} ${quantumAnimations.easing.quantum};\n          \n          &:hover {\n            background: ${glassMorphism.background.secondary};\n            border: ${glassMorphism.border.medium};\n            transform: translateY(-2px) scale(1.02);\n            box-shadow: \n              ${glassMorphism.shadow.dramatic},\n              0 0 40px ${quantumColors.plasma.violet}20;\n          }\n          \n          &:active {\n            transform: translateY(-1px) scale(1.01);\n          }\n        `;\n      default:\n        return css``;\n    }\n  }}\n  \n  /* Glow effect */\n  ${props => props.glowEffect && css`\n    animation: ${css`${borderGlow}`} 4s ease-in-out infinite;\n  `}\n  \n  /* Shimmer effect */\n  ${props => props.shimmerEffect && css`\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(\n        90deg,\n        transparent,\n        ${quantumColors.plasma.cyan}10,\n        transparent\n      );\n      background-size: 200% 100%;\n      animation: ${css`${shimmer}`} 3s ease-in-out infinite;\n      pointer-events: none;\n    }\n  `}\n`;\n\n// Styled components\nconst StyledGlassCard = styled.div.withConfig({\n  shouldForwardProp: (prop) => !['variant', 'glowEffect', 'shimmerEffect', 'padding'].includes(prop)\n})<{\n  variant: 'default' | 'elevated' | 'floating' | 'interactive';\n  glowEffect: boolean;\n  shimmerEffect: boolean;\n  padding: 'sm' | 'md' | 'lg' | 'xl';\n}>`\n  ${baseGlassStyles}\n  \n  padding: ${props => {\n    switch (props.padding) {\n      case 'sm': return '1rem';\n      case 'lg': return '2rem';\n      case 'xl': return '3rem';\n      default: return '1.5rem';\n    }\n  }};\n`;\n\nconst StyledGlassCardHeader = styled.div`\n  margin-bottom: 1.5rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${quantumColors.glass.border};\n`;\n\nconst GlassCardTitle = styled.h3`\n  font-family: 'Space Grotesk', 'Inter', sans-serif;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${quantumColors.neural.electric};\n  margin: 0 0 0.5rem 0;\n  \n  background: linear-gradient(\n    45deg,\n    ${quantumColors.plasma.violet},\n    ${quantumColors.plasma.cyan}\n  );\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nconst GlassCardSubtitle = styled.p`\n  font-size: 0.875rem;\n  color: ${quantumColors.neural.light};\n  margin: 0;\n  opacity: 0.8;\n`;\n\nconst StyledGlassCardContent = styled.div`\n  color: ${quantumColors.neural.bright};\n  line-height: 1.6;\n`;\n\nconst StyledGlassCardFooter = styled.div`\n  margin-top: 1.5rem;\n  padding-top: 1rem;\n  border-top: 1px solid ${quantumColors.glass.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst RippleEffect = styled.div<{ x: number; y: number }>`\n  position: absolute;\n  border-radius: 50%;\n  background: ${quantumColors.plasma.cyan}30;\n  width: 20px;\n  height: 20px;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  animation: ${css`${ripple}`} 0.6s ease-out;\n  pointer-events: none;\n`;\n\n// Component interfaces\ninterface GlassCardProps {\n  children: ReactNode;\n  variant?: 'default' | 'elevated' | 'floating' | 'interactive';\n  padding?: 'sm' | 'md' | 'lg' | 'xl';\n  glowEffect?: boolean;\n  shimmerEffect?: boolean;\n  onClick?: () => void;\n  className?: string;\n}\n\ninterface GlassCardHeaderProps {\n  title: string;\n  subtitle?: string;\n  children?: ReactNode;\n}\n\n/**\n * Glass Morphism Card Component\n * \n * Features:\n * - Multiple visual variants\n * - Glassmorphism effects with backdrop blur\n * - Optional glow and shimmer animations\n * - Interactive states with ripple effects\n * - Customizable padding\n * \n * @param variant - Visual style variant\n * @param padding - Internal padding size\n * @param glowEffect - Enable border glow animation\n * @param shimmerEffect - Enable shimmer overlay animation\n * @param onClick - Click handler for interactive variant\n */\nexport const GlassCard: React.FC<GlassCardProps> = ({\n  children,\n  variant = 'default',\n  padding = 'md',\n  glowEffect = false,\n  shimmerEffect = false,\n  onClick,\n  className,\n}) => {\n  const [ripples, setRipples] = React.useState<Array<{ x: number; y: number; id: number }>>([]);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (onClick) {\n      onClick();\n    }\n\n    // Create ripple effect for interactive cards\n    if (variant === 'interactive') {\n      const rect = event.currentTarget.getBoundingClientRect();\n      const x = event.clientX - rect.left - 10; // Center the ripple\n      const y = event.clientY - rect.top - 10;\n      const id = Date.now();\n\n      setRipples(prev => [...prev, { x, y, id }]);\n\n      // Remove ripple after animation\n      setTimeout(() => {\n        setRipples(prev => prev.filter(ripple => ripple.id !== id));\n      }, 600);\n    }\n  };\n\n  return (\n    <StyledGlassCard\n      variant={variant}\n      padding={padding}\n      glowEffect={glowEffect}\n      shimmerEffect={shimmerEffect}\n      onClick={handleClick}\n      className={className}\n    >\n      {children}\n      \n      {/* Render ripple effects */}\n      {ripples.map(ripple => (\n        <RippleEffect key={ripple.id} x={ripple.x} y={ripple.y} />\n      ))}\n    </StyledGlassCard>\n  );\n};\n\n/**\n * Glass Card Header Component\n * Pre-styled header section with title and optional subtitle\n */\nexport const GlassCardHeader: React.FC<GlassCardHeaderProps> = ({\n  title,\n  subtitle,\n  children,\n}) => (\n  <StyledGlassCardHeader>\n    <GlassCardTitle>{title}</GlassCardTitle>\n    {subtitle && <GlassCardSubtitle>{subtitle}</GlassCardSubtitle>}\n    {children}\n  </StyledGlassCardHeader>\n);\n\n/**\n * Glass Card Content Component\n * Content area with proper spacing and typography\n */\nexport const GlassCardContent: React.FC<{ children: ReactNode }> = ({ children }) => (\n  <StyledGlassCardContent>{children}</StyledGlassCardContent>\n);\n\n/**\n * Glass Card Footer Component\n * Footer section with flex layout for actions\n */\nexport const GlassCardFooter: React.FC<{ children: ReactNode }> = ({ children }) => (\n  <StyledGlassCardFooter>{children}</StyledGlassCardFooter>\n);\n\n// Pre-configured card variants for common use cases\nexport const FeatureCard: React.FC<Omit<GlassCardProps, 'variant'>> = (props) => (\n  <GlassCard {...props} variant=\"elevated\" glowEffect shimmerEffect />\n);\n\nexport const InteractiveCard: React.FC<Omit<GlassCardProps, 'variant'>> = (props) => (\n  <GlassCard {...props} variant=\"interactive\" />\n);\n\nexport const FloatingCard: React.FC<Omit<GlassCardProps, 'variant'>> = (props) => (\n  <GlassCard {...props} variant=\"floating\" glowEffect />\n);\n\n// Usage examples:\n/*\n// Basic glass card\n<GlassCard>\n  <GlassCardHeader title=\"Neural Network\" subtitle=\"AI-powered insights\" />\n  <GlassCardContent>\n    <p>Revolutionary AI technology for the future.</p>\n  </GlassCardContent>\n</GlassCard>\n\n// Interactive card with effects\n<InteractiveCard onClick={() => console.log('clicked')} shimmerEffect>\n  <h3>Click me!</h3>\n  <p>This card has ripple effects and hover animations.</p>\n</InteractiveCard>\n\n// Feature showcase card\n<FeatureCard padding=\"lg\">\n  <GlassCardHeader title=\"Quantum Computing\" />\n  <GlassCardContent>\n    <p>Experience the power of quantum algorithms.</p>\n  </GlassCardContent>\n  <GlassCardFooter>\n    <button>Learn More</button>\n  </GlassCardFooter>\n</FeatureCard>\n*/\n\nexport default GlassCard;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes, css } from 'styled-components';\nimport { \n  Plus, \n  RefreshCw, \n  Package, \n  Book, \n  Send, \n  Search, \n  Activity,\n  Clock,\n  GitBranch,\n  Zap\n} from 'lucide-react';\nimport { useSyncContext } from '../contexts/SyncContext';\nimport AddRepositoryModal from './AddRepositoryModal';\nimport { getApiUrl } from '../utils/apiConfig';\nimport { InteractiveCard, GlassCardHeader, GlassCardContent } from './styled/GlassCard';\nimport { PrimaryButton, AccentButton, GlassButton } from './styled/QuantumButton';\nimport { quantumColors } from '../styles/axiom-theme';\n\ninterface Repository {\n  id: string;\n  name: string;\n  displayName: string;\n  description: string;\n  category: string;\n  status: string;\n  metrics: {\n    apiCount: number;\n    postmanCollections?: number;\n    lastUpdated: string;\n  };\n  apiTypes?: {\n    hasOpenAPI: boolean;\n    hasGraphQL: boolean;\n    hasGrpc: boolean;\n    hasPostman: boolean;\n  };\n}\n\n// Styled Components\nconst Container = styled.div`\n  min-height: 100vh;\n  padding: 100px 2rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  animation: fadeIn 0.5s ease-out;\n  \n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nconst HeroSection = styled.div`\n  text-align: center;\n  margin-bottom: 4rem;\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -50px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 300px;\n    height: 300px;\n    background: radial-gradient(\n      circle,\n      ${quantumColors.plasma.violet}20 0%,\n      ${quantumColors.plasma.cyan}10 30%,\n      transparent 70%\n    );\n    filter: blur(0px);  /* Removed blur completely */\n    animation: float 8s ease-in-out infinite;\n  }\n  \n  @keyframes float {\n    0%, 100% { transform: translateX(-50%) translateY(0); }\n    50% { transform: translateX(-50%) translateY(-20px); }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3.5rem;\n  font-weight: 900;\n  background: linear-gradient(\n    135deg,\n    ${quantumColors.plasma.violet},\n    ${quantumColors.plasma.cyan},\n    ${quantumColors.plasma.emerald}\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  margin-bottom: 1rem;\n  position: relative;\n  z-index: 1;\n  letter-spacing: -0.02em;\n  \n  @media (max-width: 768px) {\n    font-size: 2.5rem;\n  }\n`;\n\nconst Tagline = styled.p`\n  font-size: 1.25rem;\n  color: ${quantumColors.neural.light};\n  margin-bottom: 2rem;\n  position: relative;\n  z-index: 1;\n  font-weight: 300;\n  letter-spacing: 0.02em;\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  position: relative;\n  z-index: 1;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  gap: 2rem;\n  margin-top: 3rem;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst RepositoryCard = styled(InteractiveCard)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 4px;\n    background: linear-gradient(\n      90deg,\n      ${quantumColors.plasma.violet},\n      ${quantumColors.plasma.cyan},\n      ${quantumColors.plasma.emerald}\n    );\n    transform: scaleX(0);\n    transition: transform 0.3s ease;\n  }\n  \n  &:hover {\n    transform: translateY(-8px) scale(1.02);\n    box-shadow: \n      0 20px 40px rgba(139, 92, 246, 0.3),\n      0 0 60px rgba(6, 182, 212, 0.1);\n    \n    &::before {\n      transform: scaleX(1);\n    }\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n  background: linear-gradient(\n    135deg,\n    ${quantumColors.neural.electric},\n    ${quantumColors.plasma.cyan}\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  margin: 0;\n`;\n\nconst glow = keyframes`\n  0%, 100% { box-shadow: 0 0 5px ${quantumColors.plasma.emerald}40; }\n  50% { box-shadow: 0 0 15px ${quantumColors.plasma.emerald}60; }\n`;\n\nconst StatusBadge = styled.span<{ status: string }>`\n  padding: 0.25rem 0.75rem;\n  border-radius: 20px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  background: ${props => props.status === 'active' \n    ? `linear-gradient(135deg, ${quantumColors.plasma.emerald}30, ${quantumColors.plasma.cyan}30)`\n    : `linear-gradient(135deg, ${quantumColors.neural.glow}30, ${quantumColors.neural.light}30)`};\n  color: ${props => props.status === 'active' \n    ? quantumColors.plasma.emerald\n    : quantumColors.neural.bright};\n  border: 1px solid ${props => props.status === 'active' \n    ? `${quantumColors.plasma.emerald}50`\n    : `${quantumColors.neural.glow}50`};\n  animation: ${props => props.status === 'active' ? css`${glow} 2s ease-in-out infinite` : 'none'};\n`;\n\nconst Description = styled.p`\n  color: ${quantumColors.neural.light};\n  font-size: 0.95rem;\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n  flex-grow: 1;\n`;\n\nconst Metrics = styled.div`\n  display: flex;\n  gap: 1.5rem;\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  background: linear-gradient(\n    135deg,\n    rgba(139, 92, 246, 0.05),\n    rgba(6, 182, 212, 0.05)\n  );\n  border-radius: 12px;\n  border: 1px solid rgba(139, 92, 246, 0.1);\n`;\n\nconst MetricItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: ${quantumColors.neural.bright};\n  font-size: 0.9rem;\n  \n  svg {\n    color: ${quantumColors.plasma.cyan};\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.75rem;\n`;\n\nconst ActionLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.75rem;\n  background: linear-gradient(\n    135deg,\n    rgba(139, 92, 246, 0.1),\n    rgba(6, 182, 212, 0.05)\n  );\n  border: 1px solid rgba(139, 92, 246, 0.2);\n  border-radius: 10px;\n  color: ${quantumColors.neural.bright};\n  text-decoration: none;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: linear-gradient(\n      135deg,\n      rgba(139, 92, 246, 0.2),\n      rgba(6, 182, 212, 0.1)\n    );\n    border-color: ${quantumColors.plasma.cyan};\n    color: ${quantumColors.plasma.cyan};\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(139, 92, 246, 0.2);\n    \n    svg {\n      transform: scale(1.1);\n    }\n  }\n  \n  svg {\n    transition: transform 0.3s ease;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 400px;\n  color: ${quantumColors.neural.bright};\n  font-size: 1.2rem;\n  \n  &::before {\n    content: '';\n    width: 60px;\n    height: 60px;\n    border: 3px solid rgba(139, 92, 246, 0.1);\n    border-top-color: ${quantumColors.plasma.violet};\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 1rem;\n  }\n  \n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n`;\n\nconst ErrorContainer = styled.div`\n  padding: 2rem;\n  background: linear-gradient(\n    135deg,\n    rgba(239, 68, 68, 0.1),\n    rgba(239, 68, 68, 0.05)\n  );\n  border: 1px solid rgba(239, 68, 68, 0.3);\n  border-radius: 12px;\n  color: #ef4444;\n  text-align: center;\n  margin: 2rem auto;\n  max-width: 600px;\n`;\n\nconst RepositoryList: React.FC = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const { syncVersion } = useSyncContext();\n\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        console.log('[RepositoryList] Fetching repositories...');\n        const response = await fetch(getApiUrl('/api/repositories'));\n        console.log('[RepositoryList] Response status:', response.status);\n        if (!response.ok) {\n          throw new Error('Failed to fetch repositories');\n        }\n        const data = await response.json();\n        console.log('[RepositoryList] Received data:', data?.length, 'repositories');\n        setRepositories(data);\n      } catch (err) {\n        console.error('[RepositoryList] Error fetching:', err);\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRepositories();\n  }, [syncVersion]);\n\n  const handleRepositoryAdded = (repoName: string) => {\n    const fetchRepositories = async () => {\n      try {\n        const response = await fetch(getApiUrl('/api/repositories'));\n        if (!response.ok) {\n          throw new Error('Failed to fetch repositories');\n        }\n        const data = await response.json();\n        setRepositories(data);\n      } catch (err) {\n        console.error('Error refreshing repositories:', err);\n      }\n    };\n    \n    fetchRepositories();\n  };\n\n  if (loading) return <LoadingContainer>Loading repositories...</LoadingContainer>;\n  if (error) return <ErrorContainer>Error: {error}</ErrorContainer>;\n\n  return (\n    <Container>\n      <HeroSection>\n        <Title>Axiom Loom Catalog</Title>\n        <Tagline>Architecture Packages and Complete Solutions Built By Axiom Loom AI Agents!</Tagline>\n        <HeaderActions>\n          <PrimaryButton \n            onClick={() => setShowAddModal(true)}\n            leftIcon={<Plus size={20} />}\n            glowEffect\n          >\n            Add Repository\n          </PrimaryButton>\n          <Link to=\"/sync\" style={{ textDecoration: 'none' }}>\n            <AccentButton \n              leftIcon={<RefreshCw size={20} />}\n            >\n              Repository Sync\n            </AccentButton>\n          </Link>\n        </HeaderActions>\n      </HeroSection>\n      \n      <GridContainer>\n        {repositories.map((repo) => (\n          <RepositoryCard key={repo.id} data-testid=\"repository-card\">\n            <CardHeader>\n              <CardTitle>{repo.displayName}</CardTitle>\n              <StatusBadge status={repo.status}>{repo.status}</StatusBadge>\n            </CardHeader>\n            \n            <Description>{repo.description}</Description>\n            \n            <Metrics>\n              <MetricItem>\n                <Zap size={16} />\n                <span>APIs: {repo.metrics.apiCount}</span>\n              </MetricItem>\n              <MetricItem>\n                <Clock size={16} />\n                <span>Updated: {new Date(repo.metrics.lastUpdated).toLocaleDateString()}</span>\n              </MetricItem>\n            </Metrics>\n            \n            <ActionButtons>\n              <ActionLink to={`/repository/${repo.name}`}>\n                <Package size={16} />\n                Repository\n              </ActionLink>\n              <ActionLink to={`/docs/${repo.name}`}>\n                <Book size={16} />\n                Documentation\n              </ActionLink>\n              {repo.apiTypes?.hasPostman && (\n                <ActionLink to={`/postman/${repo.name}`}>\n                  <Send size={16} />\n                  Postman\n                </ActionLink>\n              )}\n              {repo.apiTypes?.hasGraphQL && (\n                <ActionLink to={`/graphql/${repo.name}`}>\n                  <Search size={16} />\n                  GraphQL\n                </ActionLink>\n              )}\n              {(repo.apiTypes?.hasOpenAPI || repo.apiTypes?.hasGraphQL || repo.apiTypes?.hasGrpc) && (\n                <ActionLink to={`/api-explorer/${repo.name}`}>\n                  <Activity size={16} />\n                  API Explorer\n                </ActionLink>\n              )}\n            </ActionButtons>\n          </RepositoryCard>\n        ))}\n      </GridContainer>\n      \n      <AddRepositoryModal\n        isOpen={showAddModal}\n        onClose={() => setShowAddModal(false)}\n        onSuccess={handleRepositoryAdded}\n      />\n    </Container>\n  );\n};\n\nexport default RepositoryList;"],"names":["TokenService","storeToken","owner","repo","token","accountName","key","accountUrl","tokenInfo","this","encryptToken","createdAt","Date","toISOString","tokens","getStoredTokens","saveTokens","getToken","repoKey","updateLastUsed","decryptToken","orgKey","getTokenInfo","info","listAccounts","Object","entries","map","_ref","split","lastUsed","removeToken","validateToken","response","fetch","headers","ok","_response$headers$get","data","json","scopes","get","valid","username","login","status","error","Error","message","hasToken","stored","localStorage","getItem","STORAGE_KEY","JSON","parse","setItem","stringify","getEncryptionKey","encrypted","i","length","String","fromCharCode","charCodeAt","btoa","decoded","atob","decrypted","ENCRYPTION_KEY","Array","from","crypto","getRandomValues","Uint8Array","b","toString","padStart","join","clearAll","removeItem","isOpen","onClose","onSuccess","repoInput","setRepoInput","useState","githubToken","setGithubToken","tokenAccountName","setTokenAccountName","saveTokenForOrg","setSaveTokenForOrg","showTokenField","setShowTokenField","isValidating","setIsValidating","isValidatingToken","setIsValidatingToken","isSyncing","setIsSyncing","setError","validationStatus","setValidationStatus","tokenValidationStatus","setTokenValidationStatus","parsedRepo","setParsedRepo","requiresAuth","setRequiresAuth","existingTokenInfo","setExistingTokenInfo","tokenUsername","setTokenUsername","handleClose","handleValidate","async","trim","parsed","input","trimmedInput","includes","startsWith","url","replace","urlObj","URL","hostname","pathParts","pathname","filter","part","name","parts","parseGitHubUrl","test","endsWith","tokenToUse","result","getApiUrl","method","body","undefined","exists","needsAuth","verifyRepositoryExists","isPrivate","useEffect","ReactDOM","_jsx","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","padding","overflow","onClick","e","target","currentTarget","children","_jsxs","borderRadius","boxShadow","width","maxWidth","maxHeight","flexDirection","stopPropagation","borderBottom","fontSize","fontWeight","color","margin","marginTop","overflowY","flex","className","htmlFor","marginBottom","id","type","value","onChange","onBlur","placeholder","border","outline","transition","cursor","disabled","fill","viewBox","fillRule","d","clipRule","gap","height","flexShrink","toLocaleString","validateGitHubToken","href","rel","checked","background","onMouseOver","onMouseOut","marginRight","lineHeight","account","borderTop","opacity","repoToSave","configResponse","errorData","document","shimmer","keyframes","glassFloat","borderGlow","quantumColors","plasma","violet","glass","cyan","emerald","ripple","baseGlassStyles","css","glassMorphism","subtle","shadow","soft","props","variant","medium","backdrop","heavy","dramatic","quantumAnimations","duration","normal","easing","quantum","secondary","glowEffect","shimmerEffect","StyledGlassCard","styled","div","withConfig","shouldForwardProp","prop","RippleEffect","h3","neural","electric","p","light","bright","x","y","GlassCard","ripples","setRipples","React","event","rect","getBoundingClientRect","clientX","clientY","now","prev","setTimeout","Container","HeroSection","Title","h1","Tagline","HeaderActions","GridContainer","RepositoryCard","CardHeader","CardTitle","glow","StatusBadge","span","Description","Metrics","MetricItem","ActionButtons","ActionLink","Link","LoadingContainer","ErrorContainer","RepositoryList","repositories","setRepositories","loading","setLoading","showAddModal","setShowAddModal","syncVersion","useSyncContext","err","fetchRepositories","PrimaryButton","leftIcon","Plus","size","to","textDecoration","AccentButton","RefreshCw","_repo$apiTypes","_repo$apiTypes2","_repo$apiTypes3","_repo$apiTypes4","_repo$apiTypes5","displayName","description","Zap","metrics","apiCount","Clock","lastUpdated","toLocaleDateString","Package","Book","apiTypes","hasPostman","Send","hasGraphQL","Search","hasOpenAPI","hasGrpc","Activity","AddRepositoryModal","repoName"],"sourceRoot":""}