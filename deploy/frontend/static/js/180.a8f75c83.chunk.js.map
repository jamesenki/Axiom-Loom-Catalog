{"version":3,"file":"static/js/180.a8f75c83.chunk.js","mappings":"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","sources":["components/RepositoryDetailRedesigned.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  ArrowLeft, \n  Target,\n  TrendingUp,\n  Users,\n  DollarSign,\n  Shield,\n  Cpu,\n  Cloud,\n  Database,\n  Zap,\n  Package,\n  GitBranch,\n  BookOpen,\n  FileText,\n  Settings,\n  Code,\n  BarChart3,\n  Layers\n} from 'lucide-react';\nimport { theme } from '../styles/design-system';\nimport {\n  Container,\n  Section,\n  H1,\n  H2,\n  H3,\n  Text,\n  Lead,\n  Button,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  Flex,\n  Grid,\n  Badge,\n  FullPageLoading\n} from './styled';\n\ninterface RepositoryDetails {\n  id: string;\n  name: string;\n  displayName: string;\n  description: string;\n  marketingDescription?: string;\n  category: string;\n  status: string;\n  businessValue?: {\n    targetMarket?: string;\n    roi?: string;\n    keyBenefits?: string[];\n    useCases?: string[];\n  };\n  techStack?: {\n    languages?: string[];\n    frameworks?: string[];\n    databases?: string[];\n    integrations?: string[];\n  };\n  categories?: string[];\n  metrics: {\n    apiCount: number;\n    postmanCollections?: number;\n    lastUpdated: string;\n  };\n  apiTypes?: {\n    hasOpenAPI: boolean;\n    hasGraphQL: boolean;\n    hasGrpc: boolean;\n    hasPostman: boolean;\n  };\n}\n\nconst PageHeader = styled.div`\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary.black} 0%, ${props => props.theme.colors.secondary.darkGray} 100%);\n  padding: ${props => props.theme.spacing[16]} 0;\n  margin-bottom: ${props => props.theme.spacing[10]};\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    right: -20%;\n    width: 60%;\n    height: 200%;\n    background: radial-gradient(circle, ${props => props.theme.colors.primary.yellow}15 0%, transparent 70%);\n    pointer-events: none;\n  }\n`;\n\nconst BackButton = styled(Button)`\n  margin-bottom: ${props => props.theme.spacing[6]};\n  background: transparent;\n  border: 1px solid ${props => props.theme.colors.primary.yellow};\n  color: ${props => props.theme.colors.primary.yellow};\n  position: relative;\n  z-index: 1;\n  \n  &:hover {\n    background: ${props => props.theme.colors.primary.yellow};\n    color: ${props => props.theme.colors.primary.black};\n  }\n`;\n\nconst BusinessCard = styled(Card)`\n  border-top: 4px solid ${props => props.theme.colors.primary.yellow};\n  height: 100%;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${props => props.theme.shadows.xl};\n  }\n`;\n\nconst CategoryBadge = styled(Badge)`\n  background: ${props => props.theme.colors.background.tertiary};\n  color: ${props => props.theme.colors.text.primary};\n  border: 1px solid ${props => props.theme.colors.border.light};\n  font-weight: ${props => props.theme.typography.fontWeight.medium};\n`;\n\nconst IconWrapper = styled.div<{ color?: string }>`\n  width: 48px;\n  height: 48px;\n  border-radius: ${props => props.theme.borderRadius.lg};\n  background: ${props => props.color || theme.colors.primary.yellow}20;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${props => props.theme.spacing[4]};\n  \n  svg {\n    color: ${props => props.color || theme.colors.primary.yellow};\n  }\n`;\n\nconst TechStackGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${props => props.theme.spacing[3]};\n`;\n\nconst TechItem = styled.div`\n  background: ${props => props.theme.colors.background.secondary};\n  padding: ${props => props.theme.spacing[3]} ${props => props.theme.spacing[4]};\n  border-radius: ${props => props.theme.borderRadius.md};\n  text-align: center;\n  font-size: ${props => props.theme.typography.fontSize.sm};\n  font-weight: ${props => props.theme.typography.fontWeight.medium};\n  border: 1px solid ${props => props.theme.colors.border.light};\n`;\n\nconst BenefitList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  \n  li {\n    padding: ${props => props.theme.spacing[3]} 0;\n    padding-left: ${props => props.theme.spacing[8]};\n    position: relative;\n    border-bottom: 1px solid ${props => props.theme.colors.border.light};\n    \n    &:last-child {\n      border-bottom: none;\n    }\n    \n    &::before {\n      content: '✓';\n      position: absolute;\n      left: 0;\n      top: ${props => props.theme.spacing[3]};\n      width: 24px;\n      height: 24px;\n      background: ${props => props.theme.colors.primary.yellow};\n      color: ${props => props.theme.colors.primary.black};\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst ActionGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${props => props.theme.spacing[4]};\n  margin-top: ${props => props.theme.spacing[6]};\n`;\n\n// Business category mappings\nconst businessCategories: Record<string, string[]> = {\n  'future-mobility-consumer-platform': ['IoT', 'AI/ML', 'Consumer Tech', 'Electric Vehicles', 'Mobile Apps'],\n  'future-mobility-fleet-platform': ['Fleet Management', 'IoT', 'AI Analytics', 'Route Optimization', 'Electric Vehicles'],\n  'future-mobility-oems-platform': ['Manufacturing', 'AI/ML', 'Supply Chain', 'Quality Control', 'Industry 4.0'],\n  'future-mobility-regulatory-platform': ['Compliance', 'Reporting', 'Government Tech', 'Data Analytics', 'Sustainability'],\n  'future-mobility-tech-platform': ['MaaS', 'API Platform', 'Cloud Infrastructure', 'Developer Tools', 'Integration'],\n  'future-mobility-utilities-platform': ['Smart Grid', 'Energy Management', 'IoT', 'AI/ML', 'Infrastructure'],\n  'nslabsdashboards': ['IoT', 'Industrial Equipment', 'AI/ML', 'Predictive Maintenance', 'Analytics'],\n  'rentalFleets': ['Fleet Management', 'Rental Operations', 'Customer Experience', 'Booking Systems', 'Analytics'],\n  'smartpath': ['Navigation', 'AI/ML', 'Route Optimization', 'Real-time Processing', 'Mobile'],\n  'mobility-architecture-package-orchestrator': ['Architecture', 'Automation', 'DevOps', 'API Management', 'Integration'],\n  'sovd-diagnostic-ecosystem-platform-architecture': ['Automotive Diagnostics', 'Testing', 'Quality Assurance', 'Standards Compliance', 'API Testing']\n};\n\nconst businessValueData: Record<string, any> = {\n  'future-mobility-consumer-platform': {\n    targetMarket: '2+ Billion Global Consumers',\n    roi: '40% increase in customer engagement',\n    keyBenefits: [\n      'Personalized mobility experiences powered by AI',\n      'Seamless integration with smart city infrastructure',\n      'Real-time route optimization and energy management',\n      'Multi-modal transportation planning'\n    ],\n    useCases: [\n      'Smart EV charging recommendations',\n      'Personalized route planning',\n      'Mobility-as-a-Service integration',\n      'Carbon footprint tracking'\n    ]\n  },\n  'future-mobility-fleet-platform': {\n    targetMarket: 'Fleet Operators & Logistics Companies',\n    roi: '35% reduction in operational costs',\n    keyBenefits: [\n      'AI-driven fleet optimization',\n      'Predictive maintenance algorithms',\n      'Real-time energy management',\n      'Dynamic route optimization'\n    ],\n    useCases: [\n      'Last-mile delivery optimization',\n      'Fleet electrification planning',\n      'Driver behavior analytics',\n      'Maintenance scheduling'\n    ]\n  },\n  'nslabsdashboards': {\n    targetMarket: 'Industrial Equipment Manufacturers',\n    roi: '50% reduction in unplanned downtime',\n    keyBenefits: [\n      'Real-time equipment monitoring',\n      'ML-powered predictive maintenance',\n      'Advanced analytics dashboards',\n      'IoT sensor integration'\n    ],\n    useCases: [\n      'Industrial lubricant monitoring',\n      'Water heater optimization',\n      'Robot device management',\n      'Equipment lifecycle tracking'\n    ]\n  }\n};\n\nconst RepositoryDetailRedesigned: React.FC = () => {\n  const { repoName } = useParams<{ repoName: string }>();\n  const [repository, setRepository] = useState<RepositoryDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchRepositoryDetails = async () => {\n      try {\n        const response = await fetch(`/api/repository/${repoName}/details`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch repository details');\n        }\n        const data = await response.json();\n        \n        // Enhance with business data\n        const enhanced = {\n          ...data,\n          categories: businessCategories[repoName || ''] || ['General'],\n          businessValue: businessValueData[repoName || ''] || {\n            targetMarket: 'Enterprise & Developers',\n            roi: 'Accelerated development cycles',\n            keyBenefits: ['Modern architecture patterns', 'Scalable solutions', 'Best practices implementation'],\n            useCases: ['API development', 'System integration', 'Cloud deployment']\n          }\n        };\n        \n        setRepository(enhanced);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRepositoryDetails();\n  }, [repoName]);\n\n  if (loading) {\n    return <FullPageLoading text=\"Loading repository details...\" />;\n  }\n\n  if (error || !repository) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Section>\n          <H1 color=\"secondary\">⚠️ Error Loading Repository</H1>\n          <Text color=\"secondary\">{error || 'Repository not found'}</Text>\n          <Button as={Link} to=\"/\">\n            Return to Home\n          </Button>\n        </Section>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Container maxWidth=\"lg\">\n          <BackButton as={Link} to=\"/\">\n            <ArrowLeft size={20} />\n            Back to Repositories\n          </BackButton>\n          \n          <H1 style={{ color: theme.colors.primary.white, marginBottom: theme.spacing[4], position: 'relative', zIndex: 1 }}>\n            {repository.displayName}\n          </H1>\n          \n          <Lead style={{ color: 'rgba(255, 255, 255, 0.9)', marginBottom: theme.spacing[6], position: 'relative', zIndex: 1 }}>\n            {repository.marketingDescription || repository.description}\n          </Lead>\n          \n          <Flex gap={3} wrap style={{ position: 'relative', zIndex: 1 }}>\n            <Badge variant=\"success\" size=\"lg\">{repository.status.toUpperCase()}</Badge>\n            {repository.categories?.map((cat, idx) => (\n              <CategoryBadge key={idx} size=\"lg\">{cat}</CategoryBadge>\n            ))}\n          </Flex>\n        </Container>\n      </PageHeader>\n\n      <Container maxWidth=\"lg\">\n        <Section spacing=\"large\">\n          {/* Business Value Section */}\n          <Grid columns={2} gap=\"large\">\n            <BusinessCard>\n              <CardHeader>\n                <IconWrapper>\n                  <Target size={24} />\n                </IconWrapper>\n                <CardTitle>Business Value</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Flex direction=\"column\" gap={4}>\n                  <div>\n                    <Text weight=\"semibold\" style={{ marginBottom: theme.spacing[2] }}>\n                      <Users size={16} style={{ marginRight: theme.spacing[2], verticalAlign: 'middle' }} />\n                      Target Market\n                    </Text>\n                    <Text>{repository.businessValue?.targetMarket}</Text>\n                  </div>\n                  \n                  <div>\n                    <Text weight=\"semibold\" style={{ marginBottom: theme.spacing[2] }}>\n                      <TrendingUp size={16} style={{ marginRight: theme.spacing[2], verticalAlign: 'middle' }} />\n                      Expected ROI\n                    </Text>\n                    <Text>{repository.businessValue?.roi}</Text>\n                  </div>\n                </Flex>\n              </CardContent>\n            </BusinessCard>\n\n            <BusinessCard>\n              <CardHeader>\n                <IconWrapper color={theme.colors.accent.green}>\n                  <Shield size={24} />\n                </IconWrapper>\n                <CardTitle>Key Benefits</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <BenefitList>\n                  {repository.businessValue?.keyBenefits?.map((benefit, idx) => (\n                    <li key={idx}>{benefit}</li>\n                  ))}\n                </BenefitList>\n              </CardContent>\n            </BusinessCard>\n          </Grid>\n\n          {/* Use Cases Section */}\n          <Card style={{ marginTop: theme.spacing[8] }}>\n            <CardHeader>\n              <IconWrapper color={theme.colors.accent.blue}>\n                <Layers size={24} />\n              </IconWrapper>\n              <CardTitle>Use Cases & Applications</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Grid columns={2} gap=\"medium\">\n                {repository.businessValue?.useCases?.map((useCase, idx) => (\n                  <Flex key={idx} align=\"center\" gap={3}>\n                    <Zap size={20} color={theme.colors.primary.yellow} />\n                    <Text>{useCase}</Text>\n                  </Flex>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n\n          {/* Technical Overview */}\n          <Card style={{ marginTop: theme.spacing[8] }}>\n            <CardHeader>\n              <IconWrapper color={theme.colors.accent.red}>\n                <Cpu size={24} />\n              </IconWrapper>\n              <CardTitle>Technical Overview</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Grid columns={4} gap=\"medium\">\n                <div style={{ textAlign: 'center' }}>\n                  <H3 style={{ color: theme.colors.primary.yellow }}>{repository.metrics.apiCount}</H3>\n                  <Text color=\"secondary\">Total APIs</Text>\n                </div>\n                {repository.metrics.postmanCollections && repository.metrics.postmanCollections > 0 && (\n                  <div style={{ textAlign: 'center' }}>\n                    <H3 style={{ color: theme.colors.primary.yellow }}>{repository.metrics.postmanCollections}</H3>\n                    <Text color=\"secondary\">Postman Collections</Text>\n                  </div>\n                )}\n                {repository.apiTypes?.hasGraphQL && (\n                  <div style={{ textAlign: 'center' }}>\n                    <Database size={32} color={theme.colors.accent.blue} />\n                    <Text color=\"secondary\" style={{ marginTop: theme.spacing[2] }}>GraphQL</Text>\n                  </div>\n                )}\n                {repository.apiTypes?.hasGrpc && (\n                  <div style={{ textAlign: 'center' }}>\n                    <Cloud size={32} color={theme.colors.accent.green} />\n                    <Text color=\"secondary\" style={{ marginTop: theme.spacing[2] }}>gRPC</Text>\n                  </div>\n                )}\n              </Grid>\n            </CardContent>\n          </Card>\n\n          {/* Quick Actions */}\n          <Card style={{ marginTop: theme.spacing[8] }}>\n            <CardHeader>\n              <CardTitle>🚀 Get Started</CardTitle>\n              <CardDescription>\n                Explore the repository resources and start building\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ActionGrid>\n                <Button\n                  as={Link}\n                  to={`/docs/${repository.name}`}\n                  variant=\"primary\"\n                  fullWidth\n                >\n                  <BookOpen size={20} />\n                  Documentation\n                </Button>\n                \n                {repository.metrics.apiCount > 0 && (\n                  <Button\n                    as={Link}\n                    to={`/api-explorer/${repository.name}`}\n                    variant=\"secondary\"\n                    fullWidth\n                  >\n                    <Settings size={20} />\n                    API Explorer\n                  </Button>\n                )}\n                \n                {repository.apiTypes?.hasPostman && (\n                  <Button\n                    as={Link}\n                    to={`/postman/${repository.name}`}\n                    variant=\"outline\"\n                    fullWidth\n                  >\n                    <FileText size={20} />\n                    Postman Collections\n                  </Button>\n                )}\n                \n                {repository.apiTypes?.hasGraphQL && (\n                  <Button\n                    as={Link}\n                    to={`/graphql/${repository.name}`}\n                    variant=\"outline\"\n                    fullWidth\n                  >\n                    <Database size={20} />\n                    GraphQL Playground\n                  </Button>\n                )}\n                \n                {repository.apiTypes?.hasGrpc && (\n                  <Button\n                    as={Link}\n                    to={`/grpc-playground/${repository.name}`}\n                    variant=\"outline\"\n                    fullWidth\n                  >\n                    <Code size={20} />\n                    gRPC Playground\n                  </Button>\n                )}\n                \n                <Button\n                  as=\"a\"\n                  href={`https://github.com/EYGS/${repository.name}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  variant=\"outline\"\n                  fullWidth\n                >\n                  <GitBranch size={20} />\n                  View on GitHub\n                </Button>\n              </ActionGrid>\n            </CardContent>\n          </Card>\n        </Section>\n      </Container>\n    </>\n  );\n};\n\nexport default RepositoryDetailRedesigned;"],"names":["PageHeader","styled","div","props","theme","colors","primary","black","secondary","darkGray","spacing","yellow","BackButton","Button","BusinessCard","Card","shadows","xl","CategoryBadge","Badge","background","tertiary","text","border","light","typography","fontWeight","medium","IconWrapper","borderRadius","lg","color","BenefitList","md","fontSize","sm","ul","ActionGrid","businessCategories","businessValueData","targetMarket","roi","keyBenefits","useCases","RepositoryDetailRedesigned","_repository$categorie","_repository$businessV","_repository$businessV2","_repository$businessV3","_repository$businessV4","_repository$businessV5","_repository$businessV6","_repository$apiTypes","_repository$apiTypes2","_repository$apiTypes3","_repository$apiTypes4","_repository$apiTypes5","repoName","useParams","repository","setRepository","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","ok","Error","enhanced","json","categories","businessValue","err","message","fetchRepositoryDetails","_jsx","FullPageLoading","Container","maxWidth","children","_jsxs","Section","H1","Text","as","Link","to","_Fragment","ArrowLeft","size","style","white","marginBottom","position","zIndex","displayName","Lead","marketingDescription","description","Flex","gap","wrap","variant","status","toUpperCase","map","cat","idx","Grid","columns","CardHeader","Target","CardTitle","CardContent","direction","weight","Users","marginRight","verticalAlign","TrendingUp","accent","green","Shield","benefit","marginTop","blue","Layers","useCase","align","Zap","red","Cpu","textAlign","H3","metrics","apiCount","postmanCollections","apiTypes","hasGraphQL","Database","hasGrpc","Cloud","CardDescription","name","fullWidth","BookOpen","Settings","hasPostman","FileText","Code","href","target","rel","GitBranch"],"sourceRoot":""}