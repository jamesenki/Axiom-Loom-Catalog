{"version":3,"file":"static/js/451.c82d5db1.chunk.js","mappings":"gNAWA,MAAMA,EAAOC,EAAAA,EAAS;;;EAKhBC,EAAoBC,EAAAA,GAAOC,GAAG;;;;;;EAQ9BC,EAAeF,EAAAA,GAAOC,GAAG;;;;;;;EASzBE,EAAUH,EAAAA,GAAOC,GAAG;;;;;;eAMXG,EAAAA,EAAG,GAAGP;;EAIfQ,EAAUL,EAAAA,GAAOM,CAAC;;;;EAMlBC,EAAeP,EAAAA,GAAOC,GAAG;;;;;;;EAmE/B,EA1D+BO,KAC7B,MAAOC,IAAgBC,EAAAA,EAAAA,MACjBC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAwB,MAiClD,OA/BAC,EAAAA,EAAAA,WAAU,KACeC,WACrB,MAAMC,EAAQT,EAAaU,IAAI,SACzBC,EAAoBX,EAAaU,IAAI,gBACrCE,EAAeZ,EAAaU,IAAI,WAEtC,GAAIE,EAGF,OAFAP,EAASO,QACTC,WAAW,IAAMX,EAAS,UAAW,KAIvC,GAAIO,GAASE,EAAmB,CAE9BG,aAAaC,QAAQ,gBAAiBN,GACtCK,aAAaC,QAAQ,mBAAoBJ,GAIzC,MAAMK,EAAYC,eAAeC,QAAQ,oBAAsB,IAC/DD,eAAeE,WAAW,mBAC1BjB,EAASc,EAAW,CAAEI,SAAS,GACjC,MACEf,EAAS,+BACTQ,WAAW,IAAMX,EAAS,UAAW,MAIzCmB,IACC,CAACrB,EAAcE,KAGhBoB,EAAAA,EAAAA,KAAChC,EAAiB,CAAAiC,UAChBD,EAAAA,EAAAA,KAAC7B,EAAY,CAAA8B,SACVnB,GACCoB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACED,EAAAA,EAAAA,KAAC1B,EAAO,CAAA2B,SAAC,2BACTD,EAAAA,EAAAA,KAACxB,EAAY,CAAAyB,SAAEnB,KACfkB,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEC,UAAW,OAAQC,MAAO,WAAYL,SAAC,gCAKrDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACED,EAAAA,EAAAA,KAAC5B,EAAO,KACR4B,EAAAA,EAAAA,KAAC1B,EAAO,CAAA2B,SAAC,iC","sources":["components/auth/AuthCallback.tsx"],"sourcesContent":["/**\n * Auth Callback Component\n * Handles OAuth2/SSO callback from EY login\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport styled, { keyframes, css } from 'styled-components';\nimport { useAuth } from '../../contexts/BypassAuthContext';\n\n// Keyframes animations\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst CallbackContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst CallbackCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);\n  padding: 48px;\n  text-align: center;\n  max-width: 400px;\n`;\n\nconst Spinner = styled.div`\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid #0066cc;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: ${css`${spin}`} 1s linear infinite;\n  margin: 0 auto 24px;\n`;\n\nconst Message = styled.p`\n  font-size: 18px;\n  color: #2e3440;\n  margin: 0;\n`;\n\nconst ErrorMessage = styled.div`\n  background: #fee;\n  border: 1px solid #fcc;\n  border-radius: 6px;\n  padding: 16px;\n  color: #c00;\n  margin-top: 16px;\n`;\n\nconst AuthCallback: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const handleCallback = async () => {\n      const token = searchParams.get('token');\n      const refreshTokenParam = searchParams.get('refreshToken');\n      const errorMessage = searchParams.get('message');\n\n      if (errorMessage) {\n        setError(errorMessage);\n        setTimeout(() => navigate('/login'), 3000);\n        return;\n      }\n\n      if (token && refreshTokenParam) {\n        // Store tokens\n        localStorage.setItem('ey_auth_token', token);\n        localStorage.setItem('ey_refresh_token', refreshTokenParam);\n        \n        // For local auth context, we'll just redirect and let the auth check happen on next render\n        // Redirect to home or previous page\n        const returnUrl = sessionStorage.getItem('auth_return_url') || '/';\n        sessionStorage.removeItem('auth_return_url');\n        navigate(returnUrl, { replace: true });\n      } else {\n        setError('Invalid callback parameters');\n        setTimeout(() => navigate('/login'), 3000);\n      }\n    };\n\n    handleCallback();\n  }, [searchParams, navigate]);\n\n  return (\n    <CallbackContainer>\n      <CallbackCard>\n        {error ? (\n          <>\n            <Message>Authentication failed</Message>\n            <ErrorMessage>{error}</ErrorMessage>\n            <p style={{ marginTop: '16px', color: '#6c757d' }}>\n              Redirecting to login...\n            </p>\n          </>\n        ) : (\n          <>\n            <Spinner />\n            <Message>Completing sign in...</Message>\n          </>\n        )}\n      </CallbackCard>\n    </CallbackContainer>\n  );\n};\n\nexport default AuthCallback;"],"names":["spin","keyframes","CallbackContainer","styled","div","CallbackCard","Spinner","css","Message","p","ErrorMessage","AuthCallback","searchParams","useSearchParams","navigate","useNavigate","error","setError","useState","useEffect","async","token","get","refreshTokenParam","errorMessage","setTimeout","localStorage","setItem","returnUrl","sessionStorage","getItem","removeItem","replace","handleCallback","_jsx","children","_jsxs","_Fragment","style","marginTop","color"],"sourceRoot":""}