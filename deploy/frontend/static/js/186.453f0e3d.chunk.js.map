{"version":3,"file":"static/js/186.453f0e3d.chunk.js","mappings":"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","sources":["components/APIDocumentationHub.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ApiDetectionResult } from '../services/dynamicApiDetection';\n\ninterface ApiEndpoint {\n  method: string;\n  path: string;\n  summary?: string;\n  description?: string;\n  parameters?: any[];\n  responses?: any;\n}\n\ninterface ApiSpec {\n  type: 'rest' | 'graphql' | 'grpc';\n  file: string;\n  title: string;\n  version?: string;\n  description?: string;\n  endpoints?: ApiEndpoint[];\n  schema?: string;\n  services?: any[];\n}\n\nconst getApiDisplayName = (fileName: string): string => {\n  // Get just the filename without path\n  const baseName = fileName.split('/').pop() || fileName;\n  \n  // Remove file extension\n  const nameWithoutExt = baseName.replace(/\\.(yaml|yml|json|graphql|gql|proto)$/i, '');\n  \n  // Convert common patterns to readable names\n  const cleaned = nameWithoutExt\n    .replace(/[-_]/g, ' ')\n    .replace(/api/gi, 'API')\n    .replace(/openapi/gi, 'OpenAPI')\n    .replace(/swagger/gi, 'Swagger')\n    .replace(/spec/gi, 'Spec')\n    .replace(/schema/gi, 'Schema')\n    .replace(/\\b(\\w)/g, (match) => match.toUpperCase()); // Capitalize first letters\n    \n  // If still too long, truncate\n  return cleaned.length > 40 ? cleaned.substring(0, 37) + '...' : cleaned;\n};\n\nconst APIDocumentationHub: React.FC = () => {\n  const { repoName } = useParams<{ repoName: string }>();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [apiSpecs, setApiSpecs] = useState<ApiSpec[]>([]);\n  const [selectedSpec, setSelectedSpec] = useState<ApiSpec | null>(null);\n  const [apiDetection, setApiDetection] = useState<ApiDetectionResult | null>(null);\n  const [activeTab, setActiveTab] = useState<'overview' | 'explorer' | 'postman' | 'graphql'>('overview');\n\n  useEffect(() => {\n    const fetchApiData = async () => {\n      try {\n        setLoading(true);\n        \n        // Fetch API detection results\n        const detectionResponse = await fetch(`/api/repository/${repoName}/apis`);\n        if (!detectionResponse.ok) {\n          throw new Error('Failed to detect APIs');\n        }\n        const detection = await detectionResponse.json();\n        setApiDetection(detection);\n\n        // Convert detection results to specs\n        const specs: ApiSpec[] = [];\n        \n        // Process REST APIs\n        if (detection.apis?.rest) {\n          detection.apis.rest.forEach((api: any) => {\n            specs.push({\n              type: 'rest',\n              file: api.file,\n              title: api.title || 'REST API',\n              version: api.version,\n              description: api.description\n            });\n          });\n        }\n\n        // Process GraphQL APIs\n        if (detection.apis?.graphql) {\n          detection.apis.graphql.forEach((api: any) => {\n            specs.push({\n              type: 'graphql',\n              file: api.file,\n              title: 'GraphQL API',\n              schema: api.schema\n            });\n          });\n        }\n\n        // Process gRPC APIs\n        if (detection.apis?.grpc) {\n          detection.apis.grpc.forEach((api: any) => {\n            specs.push({\n              type: 'grpc',\n              file: api.file,\n              title: api.serviceName || 'gRPC Service',\n              services: api.services\n            });\n          });\n        }\n\n        setApiSpecs(specs);\n        if (specs.length > 0) {\n          setSelectedSpec(specs[0]);\n        }\n      } catch (err) {\n        console.error('Error fetching API data:', err);\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchApiData();\n  }, [repoName]);\n\n  const getApiTypeIcon = (type: string) => {\n    switch (type) {\n      case 'rest': return '🔌';\n      case 'graphql': return '🔍';\n      case 'grpc': return '⚡';\n      default: return '📡';\n    }\n  };\n\n  const getApiTypeColor = (type: string) => {\n    switch (type) {\n      case 'rest': return 'text-blue-400';\n      case 'graphql': return 'text-pink-400';\n      case 'grpc': return 'text-green-400';\n      default: return 'text-gray-400';\n    }\n  };\n\n  const renderOverview = () => (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-gray-800 rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-white\">REST APIs</h3>\n            <span className=\"text-3xl\">🔌</span>\n          </div>\n          <p className=\"text-3xl font-bold text-blue-400\">\n            {apiDetection?.apis?.rest?.length || 0}\n          </p>\n          <p className=\"text-gray-400 mt-2\">OpenAPI/Swagger</p>\n        </div>\n\n        <div className=\"bg-gray-800 rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-white\">GraphQL APIs</h3>\n            <span className=\"text-3xl\">🔍</span>\n          </div>\n          <p className=\"text-3xl font-bold text-pink-400\">\n            {apiDetection?.apis?.graphql?.length || 0}\n          </p>\n          <p className=\"text-gray-400 mt-2\">Schema definitions</p>\n        </div>\n\n        <div className=\"bg-gray-800 rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-white\">gRPC Services</h3>\n            <span className=\"text-3xl\">⚡</span>\n          </div>\n          <p className=\"text-3xl font-bold text-green-400\">\n            {apiDetection?.apis?.grpc?.length || 0}\n          </p>\n          <p className=\"text-gray-400 mt-2\">Protocol buffers</p>\n        </div>\n      </div>\n\n      <div className=\"bg-gray-800 rounded-lg p-6\">\n        <h3 className=\"text-xl font-semibold text-white mb-4\">Available API Specifications</h3>\n        <div className=\"space-y-3\">\n          {apiSpecs.map((spec, index) => (\n            <div\n              key={index}\n              className={`border rounded-lg p-4 cursor-pointer transition-all ${\n                selectedSpec === spec\n                  ? 'border-blue-500 bg-blue-900/20'\n                  : 'border-gray-700 hover:border-gray-600'\n              }`}\n              onClick={() => setSelectedSpec(spec)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className={`text-2xl ${getApiTypeColor(spec.type)}`}>\n                    {getApiTypeIcon(spec.type)}\n                  </span>\n                  <div>\n                    <h4 className=\"text-white font-medium\">{spec.title || getApiDisplayName(spec.file)}</h4>\n                    <p className=\"text-gray-400 text-sm\" title={spec.file}>{getApiDisplayName(spec.file)}</p>\n                  </div>\n                </div>\n                {spec.version && (\n                  <span className=\"text-gray-400 text-sm\">v{spec.version}</span>\n                )}\n              </div>\n              {spec.description && (\n                <p className=\"text-gray-400 text-sm mt-2\">{spec.description}</p>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {apiSpecs.length === 0 && (\n          <p className=\"text-gray-400 text-center py-8\">\n            No API specifications found in this repository\n          </p>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderApiExplorer = () => (\n    <div className=\"bg-gray-800 rounded-lg p-6\">\n      <h3 className=\"text-xl font-semibold text-white mb-4\">API Explorer</h3>\n      {selectedSpec ? (\n        <div>\n          <div className=\"mb-6\">\n            <h4 className=\"text-lg font-medium text-white mb-2\">{selectedSpec.title || getApiDisplayName(selectedSpec.file)}</h4>\n            <p className=\"text-gray-400\" title={selectedSpec.file}>{getApiDisplayName(selectedSpec.file)}</p>\n          </div>\n\n          {selectedSpec.type === 'rest' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-gray-700/50 rounded-lg p-4\">\n                <p className=\"text-gray-300 mb-2\">\n                  This REST API specification can be explored using the integrated Swagger UI.\n                </p>\n                <Link\n                  to={`/api-explorer/${repoName}?spec=${encodeURIComponent(selectedSpec.file)}`}\n                  className=\"inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg text-white transition-colors\"\n                >\n                  Open in API Explorer →\n                </Link>\n              </div>\n            </div>\n          )}\n\n          {selectedSpec.type === 'graphql' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-gray-700/50 rounded-lg p-4\">\n                <p className=\"text-gray-300 mb-2\">\n                  Explore this GraphQL schema with the integrated GraphiQL interface.\n                </p>\n                <Link\n                  to={`/graphql/${repoName}?schema=${encodeURIComponent(selectedSpec.file)}`}\n                  className=\"inline-flex items-center px-4 py-2 bg-pink-600 hover:bg-pink-700 rounded-lg text-white transition-colors\"\n                >\n                  Open in GraphiQL →\n                </Link>\n              </div>\n            </div>\n          )}\n\n          {selectedSpec.type === 'grpc' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-gray-700/50 rounded-lg p-4\">\n                <h5 className=\"text-white font-medium mb-2\">gRPC Services:</h5>\n                <pre className=\"text-gray-300 text-sm overflow-x-auto\">\n                  {JSON.stringify(selectedSpec.services, null, 2)}\n                </pre>\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <p className=\"text-gray-400 text-center py-8\">\n          Select an API specification to explore\n        </p>\n      )}\n    </div>\n  );\n\n  const renderPostmanCollections = () => (\n    <div className=\"bg-gray-800 rounded-lg p-6\">\n      <h3 className=\"text-xl font-semibold text-white mb-4\">Postman Collections</h3>\n      <div className=\"space-y-4\">\n        {(apiDetection?.apis?.rest?.length ?? 0) > 0 && apiDetection?.apis?.rest ? (\n          apiDetection.apis.rest.filter((api: any) => api.file.endsWith('.postman_collection.json')).map((collection: any, index: number) => (\n            <div key={index} className=\"bg-gray-700/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h4 className=\"text-white font-medium\">{collection.name || getApiDisplayName(collection.file)}</h4>\n                  <p className=\"text-gray-400 text-sm\" title={collection.file}>{getApiDisplayName(collection.file)}</p>\n                </div>\n                <Link\n                  to={`/postman/${repoName}?collection=${encodeURIComponent(collection.file)}`}\n                  className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 rounded-lg text-white transition-colors\"\n                >\n                  View Collection\n                </Link>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"text-gray-400 text-center py-8\">\n            No Postman collections found in this repository\n          </p>\n        )}\n      </div>\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-gray-400\">Loading API documentation...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-900/20 border border-red-800 rounded-lg p-6\">\n        <h3 className=\"text-red-400 font-semibold mb-2\">Error loading API documentation</h3>\n        <p className=\"text-red-300\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"api-documentation-hub p-8 max-w-7xl mx-auto\">\n      <div className=\"mb-8\">\n        <Link to={`/repository/${repoName}`} className=\"text-blue-400 hover:text-blue-300 mb-4 inline-block\">\n          ← Back to {repoName}\n        </Link>\n        <h1 className=\"text-3xl font-bold text-white mb-4\">📚 API Documentation Hub</h1>\n        <p className=\"text-gray-300\">\n          Comprehensive API documentation and exploration for {repoName}\n        </p>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 mb-6 bg-gray-800 rounded-lg p-1\">\n        <button\n          onClick={() => setActiveTab('overview')}\n          className={`flex-1 px-4 py-2 rounded-md font-medium transition-colors ${\n            activeTab === 'overview'\n              ? 'bg-gray-700 text-white'\n              : 'text-gray-400 hover:text-white'\n          }`}\n        >\n          Overview\n        </button>\n        <button\n          onClick={() => setActiveTab('explorer')}\n          className={`flex-1 px-4 py-2 rounded-md font-medium transition-colors ${\n            activeTab === 'explorer'\n              ? 'bg-gray-700 text-white'\n              : 'text-gray-400 hover:text-white'\n          }`}\n        >\n          API Explorer\n        </button>\n        <button\n          onClick={() => setActiveTab('postman')}\n          className={`flex-1 px-4 py-2 rounded-md font-medium transition-colors ${\n            activeTab === 'postman'\n              ? 'bg-gray-700 text-white'\n              : 'text-gray-400 hover:text-white'\n          }`}\n        >\n          Postman\n        </button>\n        <button\n          onClick={() => setActiveTab('graphql')}\n          className={`flex-1 px-4 py-2 rounded-md font-medium transition-colors ${\n            activeTab === 'graphql'\n              ? 'bg-gray-700 text-white'\n              : 'text-gray-400 hover:text-white'\n          }`}\n        >\n          GraphQL\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div>\n        {activeTab === 'overview' && renderOverview()}\n        {activeTab === 'explorer' && renderApiExplorer()}\n        {activeTab === 'postman' && renderPostmanCollections()}\n        {activeTab === 'graphql' && (\n          <div className=\"bg-gray-800 rounded-lg p-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">GraphQL APIs</h3>\n            <div className=\"space-y-4\">\n              {(apiDetection?.apis?.graphql?.length ?? 0) > 0 && apiDetection?.apis?.graphql ? (\n                apiDetection.apis.graphql.map((api: any, index: number) => (\n                  <div key={index} className=\"bg-gray-700/50 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"text-white font-medium\">GraphQL Schema</h4>\n                        <p className=\"text-gray-400 text-sm\">{api.file}</p>\n                      </div>\n                      <Link\n                        to={`/graphql/${repoName}?schema=${encodeURIComponent(api.file)}`}\n                        className=\"px-4 py-2 bg-pink-600 hover:bg-pink-700 rounded-lg text-white transition-colors\"\n                      >\n                        Open GraphiQL\n                      </Link>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <p className=\"text-gray-400 text-center py-8\">\n                  No GraphQL schemas found in this repository\n                </p>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"mt-8 bg-blue-900/20 border border-blue-800 rounded-lg p-6\">\n        <h3 className=\"text-blue-400 font-semibold mb-3\">ℹ️ API Documentation Features</h3>\n        <ul className=\"text-blue-300 space-y-2 text-sm\">\n          <li>• Automatic detection of REST (OpenAPI/Swagger), GraphQL, and gRPC APIs</li>\n          <li>• Interactive API Explorer for testing endpoints</li>\n          <li>• Postman collection viewer for API testing workflows</li>\n          <li>• GraphiQL interface for GraphQL schema exploration</li>\n          <li>• Support for multiple API specifications per repository</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default APIDocumentationHub;"],"names":["getApiDisplayName","fileName","cleaned","split","pop","replace","match","toUpperCase","length","substring","APIDocumentationHub","_apiDetection$apis$gr","_apiDetection$apis6","_apiDetection$apis6$g","_apiDetection$apis7","repoName","useParams","loading","setLoading","useState","error","setError","apiSpecs","setApiSpecs","selectedSpec","setSelectedSpec","apiDetection","setApiDetection","activeTab","setActiveTab","useEffect","async","_detection$apis","_detection$apis2","_detection$apis3","detectionResponse","fetch","ok","Error","detection","json","specs","apis","rest","forEach","api","push","type","file","title","version","description","graphql","schema","grpc","serviceName","services","err","message","fetchApiData","getApiTypeIcon","getApiTypeColor","_jsx","className","children","_jsxs","Link","to","onClick","renderOverview","_apiDetection$apis","_apiDetection$apis$re","_apiDetection$apis2","_apiDetection$apis2$g","_apiDetection$apis3","_apiDetection$apis3$g","map","spec","index","encodeURIComponent","JSON","stringify","renderPostmanCollections","_apiDetection$apis$re2","_apiDetection$apis4","_apiDetection$apis4$r","_apiDetection$apis5","filter","endsWith","collection","name"],"sourceRoot":""}