{"version":3,"file":"static/js/591.49934bd2.chunk.js","mappings":"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","sources":["components/DynamicApiButtons.tsx","components/RepositoryView.tsx"],"sourcesContent":["/**\n * Dynamic API Buttons Component\n * \n * Displays API exploration buttons based on detected API types in repositories.\n * Shows only relevant buttons: Swagger UI, GraphQL Playground, gRPC UI, Postman Collections.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { ApiDetectionResult, ApiButtonType } from '../services/dynamicApiDetection';\nimport { getApiUrl } from '../utils/apiConfig';\n\ninterface DynamicApiButtonsProps {\n  repositoryName: string;\n  className?: string;\n}\n\ninterface ApiButtonConfig {\n  type: ApiButtonType | 'api-hub';\n  label: string;\n  icon: string;\n  color: string;\n  description: string;\n  onClick: () => void;\n}\n\nexport const DynamicApiButtons: React.FC<DynamicApiButtonsProps> = ({\n  repositoryName,\n  className = ''\n}) => {\n  const [apiDetection, setApiDetection] = useState<ApiDetectionResult | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    detectApis();\n  }, [repositoryName]);\n\n  const detectApis = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(getApiUrl(`/api/repository/${repositoryName}/detect-apis`), {\n        headers: {\n          'x-dev-mode': 'true'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to detect APIs');\n      }\n      const result = await response.json();\n      setApiDetection(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to detect APIs');\n      console.error('API detection error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSwaggerClick = () => {\n    // Navigate to Swagger UI for this repository\n    window.open(`/swagger/${repositoryName}`, '_blank');\n  };\n\n  const handleGraphqlClick = () => {\n    // Navigate to GraphQL Playground for this repository\n    window.open(`/graphql/${repositoryName}`, '_blank');\n  };\n\n  const handleGrpcClick = () => {\n    // Navigate to gRPC UI for this repository\n    window.open(`/grpc/${repositoryName}`, '_blank');\n  };\n\n  const handlePostmanClick = () => {\n    // Download or view Postman collection for this repository\n    window.open(`/api/postman/${repositoryName}`, '_blank');\n  };\n\n  const handleApiHubClick = () => {\n    // Navigate to comprehensive API documentation hub\n    window.location.href = `/api-hub/${repositoryName}`;\n  };\n\n  const getButtonConfigs = (): ApiButtonConfig[] => {\n    if (!apiDetection) return [];\n\n    const configs: ApiButtonConfig[] = [];\n\n    apiDetection.recommendedButtons.forEach(buttonType => {\n      switch (buttonType) {\n        case 'swagger':\n          configs.push({\n            type: 'swagger',\n            label: `Swagger UI (${apiDetection.apis.rest.length} APIs)`,\n            icon: '📋',\n            color: 'bg-green-500 hover:bg-green-600',\n            description: 'Explore REST/OpenAPI specifications',\n            onClick: handleSwaggerClick\n          });\n          break;\n\n        case 'graphql':\n          configs.push({\n            type: 'graphql',\n            label: `GraphQL Playground (${apiDetection.apis.graphql.length} schemas)`,\n            icon: '🔮',\n            color: 'bg-pink-500 hover:bg-pink-600',\n            description: 'Explore GraphQL schemas and run queries',\n            onClick: handleGraphqlClick\n          });\n          break;\n\n        case 'grpc':\n          configs.push({\n            type: 'grpc',\n            label: `gRPC UI (${apiDetection.apis.grpc.length} services)`,\n            icon: '⚡',\n            color: 'bg-blue-500 hover:bg-blue-600',\n            description: 'Explore gRPC service definitions',\n            onClick: handleGrpcClick\n          });\n          break;\n\n        case 'postman':\n          const totalApis = apiDetection.apis.rest.length + \n                           apiDetection.apis.graphql.length + \n                           apiDetection.apis.grpc.length;\n          configs.push({\n            type: 'postman',\n            label: `Postman Collection (${totalApis} APIs)`,\n            icon: '📮',\n            color: 'bg-orange-500 hover:bg-orange-600',\n            description: 'Download Postman collection for API testing',\n            onClick: handlePostmanClick\n          });\n          break;\n      }\n    });\n\n    // Always add API Hub button if any APIs exist\n    if (configs.length > 0) {\n      configs.unshift({\n        type: 'api-hub',\n        label: '📚 API Documentation Hub',\n        icon: '📚',\n        color: 'bg-purple-600 hover:bg-purple-700',\n        description: 'Comprehensive API documentation and exploration',\n        onClick: handleApiHubClick\n      });\n    }\n\n    return configs;\n  };\n\n  if (loading) {\n    return (\n      <div className={`flex items-center justify-center p-4 ${className}`}>\n        <div data-testid=\"loading-spinner\" className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500\"></div>\n        <span className=\"ml-2 text-gray-600\">Detecting available APIs...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`p-4 bg-red-50 border border-red-200 rounded-lg ${className}`}>\n        <div className=\"flex items-center\">\n          <span className=\"text-red-500 mr-2\">⚠️</span>\n          <span className=\"text-red-700\">Error detecting APIs: {error}</span>\n        </div>\n        <button\n          onClick={detectApis}\n          className=\"mt-2 px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-sm\"\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!apiDetection || !apiDetection.hasAnyApis) {\n    return (\n      <div className={`p-4 bg-gray-50 border border-gray-200 rounded-lg ${className}`}>\n        <div className=\"flex items-center text-gray-600\">\n          <span className=\"mr-2\">📚</span>\n          <span>Documentation-focused repository (no API specifications detected)</span>\n        </div>\n      </div>\n    );\n  }\n\n  const buttonConfigs = getButtonConfigs();\n\n  return (\n    <div className={`space-y-3 ${className}`}>\n      <div className=\"flex items-center mb-3\">\n        <span className=\"text-sm font-medium text-gray-700 mr-2\">API Tools:</span>\n        <span className=\"text-xs text-gray-500\">\n          {apiDetection.apis.rest.length} REST • {apiDetection.apis.graphql.length} GraphQL • {apiDetection.apis.grpc.length} gRPC\n        </span>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n        {buttonConfigs.map((config) => (\n          <button\n            key={config.type}\n            onClick={config.onClick}\n            className={`\n              flex items-center justify-center px-4 py-3 rounded-lg text-white font-medium\n              transition-colors duration-200 shadow-sm hover:shadow-md\n              ${config.color}\n            `}\n            title={config.description}\n            data-testid={`${config.type}-button`}\n          >\n            <span className=\"mr-2 text-lg\">{config.icon}</span>\n            <span className=\"text-sm\">{config.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* API Summary */}\n      <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n        <h4 className=\"text-sm font-medium text-blue-800 mb-2\">API Summary</h4>\n        <div className=\"space-y-1 text-xs text-blue-700\">\n          {apiDetection.apis.rest.length > 0 && (\n            <div>\n              <strong>REST APIs ({apiDetection.apis.rest.length}):</strong>{' '}\n              {apiDetection.apis.rest.slice(0, 3).map(api => api.title || api.file.split('/').pop()).join(', ')}\n              {apiDetection.apis.rest.length > 3 && ` and ${apiDetection.apis.rest.length - 3} more`}\n            </div>\n          )}\n          {apiDetection.apis.graphql.length > 0 && (\n            <div>\n              <strong>GraphQL Schemas ({apiDetection.apis.graphql.length}):</strong>{' '}\n              {apiDetection.apis.graphql.slice(0, 3).map(api => api.file.split('/').pop()).join(', ')}\n              {apiDetection.apis.graphql.length > 3 && ` and ${apiDetection.apis.graphql.length - 3} more`}\n            </div>\n          )}\n          {apiDetection.apis.grpc.length > 0 && (\n            <div>\n              <strong>gRPC Services ({apiDetection.apis.grpc.length}):</strong>{' '}\n              {apiDetection.apis.grpc.slice(0, 3).map(api => api.services.join(', ')).join(', ')}\n              {apiDetection.apis.grpc.length > 3 && ` and ${apiDetection.apis.grpc.length - 3} more`}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicApiButtons;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { DynamicApiButtons } from './DynamicApiButtons';\nimport { ArrowLeft, Folder, GitBranch, Calendar, Info } from 'lucide-react';\nimport { getApiUrl } from '../utils/apiConfig';\n\ninterface Repository {\n  name: string;\n  description?: string;\n  language?: string;\n  topics?: string[];\n  updated_at?: string;\n  default_branch?: string;\n  stargazers_count?: number;\n  forks_count?: number;\n}\n\nconst RepositoryView: React.FC = () => {\n  const { repoName } = useParams<{ repoName: string }>();\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    const fetchRepository = async () => {\n      if (!repoName) return;\n      \n      try {\n        setLoading(true);\n        // Fetch repository details from API\n        const response = await fetch(getApiUrl(`/api/repository/${repoName}`), {\n          headers: {\n            'x-dev-mode': 'true'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setRepository(data);\n        }\n      } catch (error) {\n        console.error('Error fetching repository:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchRepository();\n  }, [repoName]);\n  \n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p>Loading repository details...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Back Button */}\n        <Link \n          to=\"/repositories\" \n          className=\"inline-flex items-center text-blue-400 hover:text-blue-300 mb-6 transition-colors\"\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Back to Repositories\n        </Link>\n        \n        {/* Repository Header */}\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center\">\n              <Folder className=\"w-8 h-8 text-blue-400 mr-3\" />\n              <h1 className=\"text-3xl font-bold\">{repoName}</h1>\n            </div>\n          </div>\n          \n          {repository && (\n            <>\n              {repository.description && (\n                <p className=\"text-gray-300 mb-4\">{repository.description}</p>\n              )}\n              \n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-400\">\n                {repository.language && (\n                  <div className=\"flex items-center\">\n                    <span className=\"w-3 h-3 rounded-full bg-blue-500 mr-2\"></span>\n                    {repository.language}\n                  </div>\n                )}\n                {repository.default_branch && (\n                  <div className=\"flex items-center\">\n                    <GitBranch className=\"w-4 h-4 mr-1\" />\n                    {repository.default_branch}\n                  </div>\n                )}\n                {repository.updated_at && (\n                  <div className=\"flex items-center\">\n                    <Calendar className=\"w-4 h-4 mr-1\" />\n                    Last updated: {new Date(repository.updated_at).toLocaleDateString()}\n                  </div>\n                )}\n              </div>\n              \n              {repository.topics && repository.topics.length > 0 && (\n                <div className=\"mt-4 flex flex-wrap gap-2\">\n                  {repository.topics.map((topic, index) => (\n                    <span \n                      key={index}\n                      className=\"px-3 py-1 bg-blue-900 bg-opacity-30 text-blue-300 text-xs rounded-full\"\n                    >\n                      {topic}\n                    </span>\n                  ))}\n                </div>\n              )}\n            </>\n          )}\n        </div>\n        \n        {/* Dynamic API Buttons */}\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4 flex items-center\">\n            <Info className=\"w-5 h-5 mr-2\" />\n            Available API Tools\n          </h2>\n          {repoName && <DynamicApiButtons repositoryName={repoName} />}\n        </div>\n        \n        {/* Documentation Section */}\n        <div className=\"bg-gray-800 rounded-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Documentation</h2>\n          <div className=\"space-y-3\">\n            <Link \n              to={`/repository/${repoName}/docs`}\n              className=\"block p-4 bg-gray-700 rounded hover:bg-gray-600 transition-colors\"\n            >\n              <div className=\"flex justify-between items-center\">\n                <span>View Documentation</span>\n                <span className=\"text-gray-400\">→</span>\n              </div>\n            </Link>\n            <Link \n              to={`/repository/${repoName}/readme`}\n              className=\"block p-4 bg-gray-700 rounded hover:bg-gray-600 transition-colors\"\n            >\n              <div className=\"flex justify-between items-center\">\n                <span>README.md</span>\n                <span className=\"text-gray-400\">→</span>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepositoryView;\n"],"names":["DynamicApiButtons","_ref","repositoryName","className","apiDetection","setApiDetection","useState","loading","setLoading","error","setError","useEffect","detectApis","async","response","fetch","getApiUrl","headers","ok","Error","result","json","err","message","handleSwaggerClick","window","open","handleGraphqlClick","handleGrpcClick","handlePostmanClick","handleApiHubClick","location","href","_jsxs","children","_jsx","onClick","hasAnyApis","buttonConfigs","getButtonConfigs","configs","recommendedButtons","forEach","buttonType","push","type","label","apis","rest","length","icon","color","description","graphql","grpc","totalApis","unshift","map","config","title","slice","api","file","split","pop","join","services","RepositoryView","repoName","useParams","repository","setRepository","data","fetchRepository","Link","to","ArrowLeft","Folder","_Fragment","language","default_branch","GitBranch","updated_at","Calendar","Date","toLocaleDateString","topics","topic","index","Info"],"sourceRoot":""}